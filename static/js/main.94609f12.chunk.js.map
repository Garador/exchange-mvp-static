{"version":3,"sources":["serviceWorker.ts","constants/routes.ts","lib/Firebase/context.ts","lib/Firebase/firebase.ts","lib/Firebase/index.ts","components/Navigation/index.tsx","lib/Checker.ts","constants/status.ts","lib/Offer.ts","lib/Utils.ts","components/Home/index.tsx","components/NewPost/index.tsx","components/SignUp/index.tsx","components/SignIn/index.tsx","lib/Bid.ts","lib/UIKit.ts","lib/Rate.ts","components/RateSnippet/index.tsx","components/BidListing/index.tsx","components/RateListing/index.tsx","components/Post/index.tsx","lib/Contact.ts","components/Profile/index.tsx","components/PublicProfile/index.tsx","components/Base/index.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ROUTES","SIGN_UP","SIGN_IN","NEW_POST","VIEW_POST","EDIT_POST","PROFILE","PUBLIC_PROFILE","HOME","ACCOUNT","PASSWORD_FORGET","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","auth","firestore","storage","app","initializeApp","this","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","element","onAuthStateChanged","Promise","accept","unsubscribe","user","firebase","FieldValue","serverTimestamp","_instance","Navigation","state","loading","waitForAuth","load","then","catch","className","uk-navbar","to","profile","href","style","cursor","onClick","currentUser","displayName","setState","Component","CheckManager","payload","isNaN","accept_ammount","offer_ammount","accept_currency","description","offer_currency","offer_payment_method","title","length","poster","offer","data","whatsapp","phone","OFFER_STATUS","BID_STATUS","OfferManager","Instance","hasValidOfferCreationPayload","Error","uid","status","ACTIVE","createdAt","firestoreTimestamp","resultingID","collection","doc","id","set","offerId","JSON","parse","stringify","images","update","avoidImages","get","result","returnData","exists","getImages","includeImages","startAfter","stopBefore","limit","query","where","orderBy","endBefore","limitToLast","offers","offersToReturn","offerI","docs","offerEl","toDate","push","imageFiles","forEach","imgData","image","ref","delete","imageFile","ext","name","split","pop","indexOf","imageDoc","filePath","put","imageRef","getDownloadURL","downloadUrl","downloadURL","bytes","totalBytes","offerStatus","fetchOffer","_updateOfferStatus","CLOSED","offerDoc","TAKEN","console","log","fieldValue","UtilsManager","date","toLocaleString","ammount","numeral","format","HomeComponent","props","offersPaging","page","loadOffers","bind","pageBack","pageForth","fetchOffers","e","oldState","map","key","getDate","getCurrency","accept_payment_method","replace","colSpan","textAlign","NewPostComponent","formValue","redirectHome","setValue","submit","event","currentTarget","getAttribute","value","preventDefault","createOffer","resultingId","alert","err","padding","onSubmit","custom-for","onChange","custom-id","type","placeholder","maxLength","fontSize","exchangeRate","role","SignUpComponent","redirect","FirebaseInstance","SignInComponent","BidManager","bidData","newBidId","hasValidBidData","size","getBids","res","userId","bidId","bidDoc","bid","existing","empty","bids","CANCELLED","ACCEPTED","REJECTED","UIKitManager","modalId","options","UIkit","modal","document","getElementById","show","hide","RateManager","comment","rate","getBid","bidPoster","offerCreationPayload","parseInt","ratedUser","hasRateOnBid","add","rating","getOffer","hasRateOnOffer","fromUser","ratingEl","ratingType","RateSnippet","saving","save","setInput","setLoading","listenUIKit","bb","prev","callback","interval","setInterval","clearInterval","rateOffer","hideModal","rateBid","input","disabled","isLoading","Object","keys","BidListing","displayBid","displayBidContact","post","editingBidRate","bidPaging","rejectBid","loadBids","loadPost","prevBids","nextBids","acceptBid","fetchGeneralBids","postId","all","setAttribute","showModal","find","getBidContact","contact","ev","viewBidDetails","getStatus","params","RateListing","ratings","paging","loadRatings","nextPage","prevPage","fetchOfferRatings","fetchUserRatings","elements","border","borderRadius","margin","getRating","getData","posterId","ViewOwnOfferComponent","b64Image","hasBids","uploadNewImage","closeOffer","updateOffer","loadingPost","hasGeneralBids","click","onchange","target","files","reader","FileReader","onload","newImageFile","readAsDataURL","uploading","uploadImage","closing","confirm","removeImage","canSave","custom-tabindex","uk-slider","hidden","canChooseImage","maxWidth","maxHeight","display","data-src","alt","uk-img","backgroundColor","color","newImageInput","src","width","uk-slidenav-previous","uk-slider-item","uk-slidenav-next","getOfferStatus","isOwn","ViewOfferComponent","postData","bidAction","ratedOffer","placeBid","cancelBid","loadBid","createBid","canEdit","ContactManager","contactUpdatePayload","hasValidContactUData","ProfileComponent","form","updateContactInformation","listenAuthChanges","getContactInformation","PublicProfileComponent","ratePaging","profileId","BaseComponent","oldie","Helmet","rel","exact","path","component","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"4MAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+DClBOC,EAAS,CAClBC,QAAU,UACVC,QAAU,UACVC,SAAW,WACXC,UAAY,gBACZC,UAAY,qBACZC,QAAS,WACTC,eAAgB,sBAChBC,KAAO,IACPC,QAAU,WACVC,gBAAkB,c,GCREC,IAAMC,cAAwB,M,4CCIhDC,EAAS,CACdC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,6CAGKC,EAAb,WAOC,aAAuB,yBANvBC,UAMsB,OALtBC,eAKsB,OAJtBC,aAIsB,EACrBC,IAAIC,cAAcb,GAClBc,KAAKL,KAAOG,IAAIH,OAChBK,KAAKJ,UAAYE,IAAIF,YACrBI,KAAKH,QAAUC,IAAID,UAXrB,2EAmBgCI,EAAeC,GAC7C,OAAOF,KAAKL,KAAKQ,+BAA+BF,EAAOC,KApBzD,iDAuB4BD,EAAeC,GACzC,OAAOF,KAAKL,KAAKS,2BAA2BH,EAAOC,KAxBrD,gCAmCEF,KAAKL,KAAKU,YAnCZ,wCAsCmBC,GACjBN,KAAKL,KAAKY,mBAAmBD,KAvC/B,yKA2CQ,IAAIE,SAAQ,SAACC,GAClB,IAAIC,EAAc,EAAKf,KAAKY,oBAAmB,SAASI,GACvDF,EAAOE,GACPD,UA9CJ,0IA+BE,OAAOE,YAAmBC,WAAWC,qBA/BvC,gCAgBE,OADAd,KAAKe,UAAYf,KAAKe,UAAYf,KAAKe,UAAY,IAAIrB,EAChDM,KAAKe,cAhBd,KAAarB,EAKGqB,e,EA+CDrB,QAAf,SCjEeA,ICGMsB,E,4MAEjBC,MAEI,CACAC,SAAS,G,sKAuBTlB,KAAKkB,SAAU,E,SACTxB,EAASyB,c,OACfnB,KAAKkB,SAAU,E,gJAIflB,KAAKoB,OACJC,MAAK,eAGLC,OAAM,iB,+BAOP,OACI,6BAEStB,KAAKkB,QA4CL,qCA3CD,yBAAKK,UAAU,sBAAsBC,YAAU,eAC3C,yBAAKD,UAAU,kBAEX,wBAAIA,UAAU,iBACV,4BACI,kBAAC,IAAD,CAAME,GAAIpD,EAAOQ,MAAjB,WAGAmB,KAAK0B,QACL,oCACI,4BACI,kBAAC,IAAD,CAAMD,GAAIpD,EAAOG,UAAjB,iBAEJ,4BACI,kBAAC,IAAD,CAAMiD,GAAIpD,EAAOM,SAAjB,YAEF,qCAEV,4BACI,uBAAGgD,KAAK,KAAR,mBACA,yBAAKJ,UAAU,sBACX,wBAAIA,UAAU,iCAENvB,KAAK0B,QACL,wBAAIE,MAAO,CAACC,OAAO,WAAYC,QAAS,kBAAIpC,EAASC,KAAKU,YACtD,qCAEJ,oCACI,4BACI,kBAAC,IAAD,CAAMoB,GAAIpD,EAAOC,SAAjB,iBAEJ,4BACI,kBAAC,IAAD,CAAMmD,GAAIpD,EAAOE,SAAjB,qB,+BAvEhD,OAAOmB,EAASC,KAAKoC,YAAcrC,EAASC,KAAKoC,YAAYC,aAAetC,EAASC,KAAKoC,YAAY9B,MAAQ,kB,8BAI9G,OAAOP,EAASC,KAAKoC,c,4BAGbb,GACRlB,KAAKiC,SAAS,CACVf,a,eAKJ,OAAOlB,KAAKiB,MAAMC,Y,GAxBclC,IAAMkD,W,uBCFjCC,EAAb,WAEI,aAAsB,oBAF1B,yEAUiCC,GACzB,QAAGC,MAAMD,EAAQE,iBAAmBF,EAAQE,gBAAkB,OAI3DD,MAAMD,EAAQG,gBAAkBH,EAAQE,gBAAkB,QAIzDF,EAAQI,iBAAoBJ,EAAQK,aAAgBL,EAAQM,gBAAmBN,EAAQO,sBAAyBP,EAAQQ,UAIzHR,EAAQK,YAAYI,OAAS,KAAOT,EAAQQ,MAAMC,OAAS,QAvBtE,sCA8BoBT,GACZ,QAAIA,EAAQU,UAGRV,EAAQW,QAlCpB,2CAwCyBC,GACjB,QAAGA,EAAK/C,SACD+C,EAAK/C,MAAM4C,OAAS,IAAMG,EAAK/C,MAAM4C,OAAS,QAIlDG,EAAKC,YACDD,EAAKC,SAASJ,OAAS,IAAMG,EAAKC,SAASJ,OAAS,OAIxDG,EAAKE,SACDF,EAAKE,MAAML,OAAS,IAAMG,EAAKE,MAAML,OAAS,QApD7D,gCAMQ,OADA7C,KAAKe,UAAYf,KAAKe,UAAYf,KAAKe,UAAY,IAAIoB,EAChDnC,KAAKe,cANpB,KAAaoB,EACMpB,e,EA2DJoB,IChEHgB,EAMAC,ED0DGjB,IAAf,U,SChEYgB,O,mBAAAA,I,iBAAAA,I,oBAAAA,M,cAMAC,O,mBAAAA,I,uBAAAA,I,uBAAAA,I,0BAAAA,M,KCAL,IAAMC,EAAb,WAII,aAAsB,oBAJ1B,iGAcsBjB,GAdtB,0EAeYD,EAAamB,SAASC,6BAA6BnB,GAf/D,sBAgBkB,IAAIoB,MAAM,gBAhB5B,UAmBY9D,EAASC,KAAKoC,YAnB1B,sBAoBkB,IAAIyB,MAAM,2DApB5B,cAuBQpB,EAAQU,OAASpD,EAASC,KAAKoC,YAAY0B,IAC3CrB,EAAQsB,OAASP,EAAaQ,OAC9BvB,EAAQwB,UAAYlE,EAASmE,mBAEzBC,EAAcpE,EAASE,UAAUmE,WAAW,UAAUC,MAAMC,GA3BxE,UA4BcvE,EAASE,UAAUmE,WAAW,UAAUC,IAAIF,GAAaI,IAAI9B,GA5B3E,iCA6Be0B,GA7Bf,8KAgCsB1B,EAAiB+B,GAhCvC,oEAiCQ/B,EAAUgC,KAAKC,MAAMD,KAAKE,UAAUlC,IAChCD,EAAamB,SAASC,6BAA6BnB,GAlC/D,sBAmCkB,IAAIoB,MAAM,gBAnC5B,UAsCY9D,EAASC,KAAKoC,YAtC1B,sBAuCkB,IAAIyB,MAAM,2DAvC5B,cA0CQpB,EAAQU,OAASpD,EAASC,KAAKoC,YAAY0B,IAGxCrB,EAAQmC,eACAnC,EAAQmC,OAEhBnC,EAAQsB,eACAtB,EAAQsB,OAEhBtB,EAAQwB,kBACAxB,EAAQwB,UApD3B,UAuDclE,EAASE,UAAUmE,WAAW,UAAUC,IAAIG,GAASK,OAAOpC,GAvD1E,+KA0DqB+B,EAAgBM,GA1DrC,yFA2D2B/E,EAASE,UAAUmE,WAAW,UAAUC,IAAIG,GAASO,MA3DhF,UA2DYC,EA3DZ,SA4DYC,EAAaD,EAAOE,OAASF,EAAO3B,OAAS,OAC/ByB,EA7D1B,gCA8DsCzE,KAAK8E,UAAUX,GA9DrD,OA8DYS,EAAWL,OA9DvB,uCAgEeK,GAhEf,oLAmEsBG,EAAwBC,EAAkBC,EAAkBC,GAnElF,wFAsEQC,GAFIA,EAAQzF,EAASE,UAAUmE,WAAW,UACzCqB,MAAM,SAAU,KAAMjC,EAAaQ,SACjB0B,QAAQ,YAAa,QACrCL,GACCG,EAAaA,EAAMH,WAAWA,GAC3BE,IACCC,EAAaA,EAAMD,MAAMA,KAExBD,GACLE,EAAaA,EAAMG,UAAUL,GAC1BC,IACCC,EAAaA,EAAMI,YAAYL,KAGhCA,IACCC,EAAaA,EAAMD,MAAMA,IAnFzC,SAsF2BC,EAAMT,MAtFjC,OAsFYc,EAtFZ,OAuFYC,EAA0B,GACtBC,EAAS,EAxFzB,YAwF4BA,EAASF,EAAOG,KAAK9C,QAxFjD,oBAyFgB+C,EAAUJ,EAAOG,KAAKD,IACtB3C,EAAuB6C,EAAQ5C,QAC7BY,UAAYb,EAAMa,UAAYb,EAAMa,UAAUiC,SAAW,KAC/D9C,EAAMkB,GAAK2B,EAAQ3B,IAChBc,EA7Ff,kCA8FqC/E,KAAK8E,UAAU/B,EAAMkB,IA9F1D,QA8FgBlB,EAAMwB,OA9FtB,eAgGYkB,EAAeK,KAAK/C,GAhGhC,QAwFyD2C,IAxFzD,gDAkGeD,GAlGf,uLAqGoBtB,GArGpB,yFAsG2BzE,EAASE,UAAUmE,WAAnB,iBAAwCI,EAAxC,WAAyDO,MAtGpF,cAsGYH,EAtGZ,OAuGYwB,EAAsB,GAC1BxB,EAAOoB,KAAKK,SAAQ,SAAChD,GACjB,IAAIiD,EAAejD,EAAKA,OACxBiD,EAAQhC,GAAKjB,EAAKiB,GAClB8B,EAAWD,KAAKG,MA3G5B,kBA6GeF,GA7Gf,6KAgHsB5B,EAAgB+B,GAhHtC,oEAiHY/B,GAAY+B,EAjHxB,sBAkHkB,IAAI1C,MAAM,wCAlH5B,uBAoHc9D,EAASG,QAAQsG,IAAID,EAAMC,KAAKC,SApH9C,uBAqHc1G,EAASE,UAAUoE,IAAnB,iBAAiCG,EAAjC,kBAAkD+B,EAAMjC,KAAMmC,SArH5E,+KAwHsBjC,EAAgBkC,GAxHtC,kFAyHYC,EAAMD,EAAUE,KAAKC,MAAM,KAAKC,QACnB,CAAC,MAAO,OACXC,QAAQJ,GAAO,IAAM,GA3H3C,sBA4HkB,IAAI9C,MAAM,sBA5H5B,cA8HYmD,EAAWjH,EAASE,UAAUmE,WAAnB,iBAAwCI,EAAxC,WAAyDH,MACpE4C,EA/HZ,iBA+HiCzC,EA/HjC,kBA+HkDwC,EAAS1C,GA/H3D,YA+HiEqC,GA/HjE,SAgI6B5G,EAASG,QAAQsG,IAAIS,GAAUC,IAAIR,GAhIhE,cAgIYS,EAhIZ,iBAiIgCA,EAASX,IAAIY,iBAjI7C,eAiIYC,EAjIZ,iBAkIcL,EAASzC,IAAI,CACf+C,YAAaD,EACbE,MAAOJ,EAASK,WAChBhB,IAAKS,IArIjB,iCAuIeD,GAvIf,uLA0IqCxC,EAAgBiD,GA1IrD,iFA2Ic1H,EAASE,UAAUmE,WAAW,UAAUC,IAAIG,GAASK,OAAO,CAC9Dd,OAAQ0D,IA5IpB,8KAgJqBjD,GAhJrB,iFAiJsCnE,KAAKqH,WAAWlD,GAAS,GAjJ/D,iBAkJiBT,SAAWP,EAAaQ,OAlJzC,gCAmJkB3D,KAAKsH,mBAAmBnD,EAAShB,EAAaoE,QAnJhE,mCAqJkB,IAAI/D,MAAM,4CArJ5B,+KAyJmBW,GAzJnB,uFA0J+BzE,EAASE,UAAUmE,WAAW,UAAUC,IAAIG,GAASO,MA1JpF,cA0Jc8C,EA1Jd,oDA2J2BA,EAASxE,QA3JpC,IA2J4CiB,GAAIuD,EAASvD,MA3JzD,uIA8JmBmD,GAEX,IAAIA,EACA,MAAO,GAEX,OAAQA,GACJ,KAAKjE,EAAaQ,OACd,MAAO,SACX,KAAKR,EAAaoE,OACd,MAAO,SACX,KAAKpE,EAAasE,MACd,MAAO,QACX,QACI,MAAM,YAAN,OAAmBL,EAAnB,QA3KhB,uCAgLQM,QAAQC,IAAUjI,EAASE,UAAWgI,eAhL9C,gCAUQ,OADA5H,KAAKe,UAAYf,KAAKe,UAAYf,KAAKe,UAAY,IAAIsC,EAChDrD,KAAKe,cAVpB,KAAasC,EAEMtC,e,EAkLJsC,QAAf,S,iBCxLawE,EAAb,WAEI,aAAsB,oBAF1B,oDASYC,GACJ,OAAOA,EAAOA,EAAKC,iBAAmB,OAV9C,kCAagBC,GACR,OAAOC,IAAQD,GAASE,OAAO,UAdvC,gCAKQ,OADAlI,KAAKe,UAAYf,KAAKe,UAAYf,KAAKe,UAAY,IAAI8G,EAChD7H,KAAKe,cALpB,KAAa8G,EACM9G,e,EAiBJ8G,QAAf,SCZqBM,E,kDAoBjB,WAAYC,GAAW,IAAD,8BAClB,cAAMA,IAnBVnH,MAQI,CACAuE,OAAO,GACP6C,aAAc,CACVrD,WAAW,KACXC,WAAW,KACXC,MAAO,EACPoD,KAAM,IAMV,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAJC,E,mMASwBxI,KAAKiB,MAAMoH,aAA5CrD,E,EAAAA,WAAYC,E,EAAAA,WAAYC,E,EAAAA,MAC7BwC,QAAQC,IAAI,CACR3C,WAAU,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAYpB,UAAWqB,WAAU,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAYrB,UAAWsB,QACtEoD,KAAMtI,KAAKiB,MAAMoH,aAAaC,O,SAEfjF,EAAasF,aAAY,EAAzB,OAAgC3D,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAYpB,UAA5C,OAAuDqB,QAAvD,IAAuDA,OAAvD,EAAuDA,EAAYrB,UAAWsB,G,OAA7FM,E,OACJxF,KAAKiC,UAAS,SAAShB,GAInB,OAHAA,EAAK,OAAauE,EAClBvE,EAAK,aAAiB+D,WAAaQ,EAAO,GAC1CvE,EAAK,aAAiBgE,WAAaO,EAAOA,EAAO3C,OAAO,GACjD5B,K,gDAGXyG,QAAQC,IAAI,CAACiB,EAAC,OACdlB,QAAQC,IAAI,2B,yJAKhB3H,KAAKuI,e,iCAGE,IAAD,OACHvI,KAAKiB,MAAMoH,aAAaC,KAAO,GAC9BtI,KAAKiC,UAAS,SAAS4G,GAInB,OAHAA,EAAQ,aAAiB5D,WAAa4D,EAAQ,aAAiB7D,WAC/D6D,EAAQ,aAAiB7D,WAAa,KACtC6D,EAAQ,aAAiBP,MAAM,EACxBO,KACR,WACC,EAAKN,kB,kCAKL,IAAD,OACJvI,KAAKiB,MAAMuE,OAAO3C,QAAU7C,KAAKiB,MAAMoH,aAAanD,OACnDlF,KAAKiC,UAAS,SAAS4G,GAInB,OAHAA,EAAQ,aAAiB7D,WAAa6D,EAAQ,aAAiB5D,WAC/D4D,EAAQ,aAAiB5D,WAAa,KACtC4D,EAAQ,aAAiBP,MAAM,EACxBO,KACR,WACC,EAAKN,kB,+BAMb,OACI,6BACI,sCACA,2BAAOhH,UAAU,YACb,+BACI,4BACI,qCACA,sCACA,2CACA,sCACA,2CACA,0CAGR,+BAEQvB,KAAKiB,MAAMuE,OAAOsD,KAAI,SAACxI,GAAD,OAClB,wBAAIyI,IAAKzI,EAAQ2D,IACb,4BAAK4D,EAAamB,QAAQ1I,EAAQsD,YAClC,4BAAKiE,EAAaoB,YAAY3I,EAAQiC,eAAgBjC,EAAQoC,gBAC9D,4BAAKpC,EAAQqC,sBACb,4BAAKkF,EAAaoB,YAAY3I,EAAQgC,gBAAiBhC,EAAQkC,iBAC/D,4BAAKlC,EAAQ4I,uBACb,4BACI,kBAAC,IAAD,CAAMzH,GAAIpD,EAAOI,UAAU0K,QAAQ,UAAW7I,EAAQ2D,GAAG,KACrD,4BAAQ1C,UAAU,+BAAlB,SAEJ,kBAAC,IAAD,CAAME,GAAIpD,EAAOO,eAAeuK,QAAQ,aAAc7I,EAAQwC,OAAO,KACjE,4BAAQvB,UAAU,+BAAlB,iBAOxB,+BACI,4BACI,wBAAI6H,QAAS,EAAGxH,MAAO,CACnByH,UAAU,SAEV,4BAAQ9H,UAAU,YAAYO,QAAS9B,KAAKyI,UAA5C,aAEJ,wBAAIW,QAAS,EAAGxH,MAAO,CACnByH,UAAU,UAEV,4BAAQ9H,UAAU,YAAYO,QAAS9B,KAAK0I,WAA5C,sB,GA3HW1J,IAAMkD,WCF5BoH,E,kDAOjB,WAAYlB,GAAW,IAAD,8BAClB,cAAMA,IANVnH,MAAY,CACRsI,UAAU,GACVC,cAAc,GAKd,EAAKC,SAAW,EAAKA,SAASjB,KAAd,gBAChB,EAAKkB,OAAS,EAAKA,OAAOlB,KAAZ,gBAHI,E,qDAObmB,GACL,IAAM1F,EAAM0F,EAAMC,cAAeC,aAAa,aACxCC,EAAQH,EAAMC,cAAN,MACd5J,KAAKiC,UAAS,SAAShB,GAEnB,OADAA,EAAMsI,UAAUtF,GAAM6F,EACf7I,O,6BAIR0I,GAAsB,IAAD,OACxBA,EAAMI,iBACN1G,EAAa2G,YAAYhK,KAAKiB,MAAMsI,WACnClI,MAAK,SAAC4I,GACHvC,QAAQC,IAAI,oBAAoBsC,GAChChM,OAAOiM,MAAM,mDACb,EAAKjI,SAAS,CACVuH,cAAc,OAGrBlI,OAAM,SAAS6I,GACZzC,QAAQC,IAAI,yBAAyBwC,Q,4EAiBzC,OAAGnK,KAAKiB,MAAMuI,aACH,kBAAC,IAAD,CAAU/H,GAAG,MAGpB,6BACI,0BAAMG,MAAO,CAACwI,QAAQ,OAAQC,SAAUrK,KAAK0J,QACzC,4CACA,8BAAUnI,UAAU,eAEhB,yBAAKA,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,aACA,yBAAK/I,UAAU,oBACX,2BAAOgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,QAAQjJ,UAAU,WAAWkJ,KAAK,OAAOC,YAAY,YAIvG,yBAAKnJ,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,+BACA,yBAAK/I,UAAU,oBACX,8BAAUgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,cAAcjJ,UAAU,cAAcoJ,UAAW,QAItG,yBAAKpJ,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,oBACA,yBAAK/I,UAAU,oBACX,4BAAQA,UAAU,YAAY0C,GAAG,sBAAsBsG,SAAUvK,KAAKyJ,SAAUe,YAAU,kBACtF,wDACA,4BAAQV,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,UAKZ,yBAAKvI,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,sBACA,yBAAK/I,UAAU,oBACX,2BAAOgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,gBAAgBC,KAAK,SAASlJ,UAAU,eAI1F,yBAAKA,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,8BACA,yBAAK/I,UAAU,oBACX,4BAAQgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,uBAAuBjJ,UAAU,YAAY0C,GAAG,uBACvF,kFACA,4BAAQ6F,MAAM,iBAAd,iBACA,4BAAQA,MAAM,YAAd,eAKZ,yBAAKvI,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,6BACA,yBAAK/I,UAAU,oBACX,4BAAQgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,kBAAkBjJ,UAAU,YAAY0C,GAAG,uBAClF,wDACA,4BAAQ6F,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,UAKZ,yBAAKvI,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,+BACA,yBAAK/I,UAAU,oBACX,2BAAOgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,iBAAiBC,KAAK,SAASlJ,UAAU,eAI3F,yBAAKA,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,8BACA,yBAAK/I,UAAU,oBACX,4BAAQgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,wBAAwBjJ,UAAU,YAAY0C,GAAG,uBACxF,4EACA,4BAAQ6F,MAAM,iBAAd,iBACA,4BAAQA,MAAM,YAAd,eAKZ,yBAAKvI,UAAU,aACX,4BAAQA,UAAU,YAAYK,MAAO,CAACgJ,SAAS,UAA/C,mBAAyE,2BAAI5K,KAAK6K,gBAGtF,4BAAQtJ,UAAU,8BAA8BuJ,KAAK,UAArD,2B,mCA/FhB,OAFsB9K,KAAKiB,MAAMsI,UAAX,eAAyC,IACxCvJ,KAAKiB,MAAMsI,UAAX,gBAA0C,O,GAxC3BvK,IAAMkD,WCFvC6I,EAAb,kDAOI,WAAY3C,GAAW,IAAD,8BAClB,cAAMA,IANVnH,MAAY,CACRsI,UAAU,GACVyB,UAAU,GAKV,EAAKvB,SAAW,EAAKA,SAASjB,KAAd,gBAChB,EAAKkB,OAAS,EAAKA,OAAOlB,KAAZ,gBACd,EAAKpH,KAAO,EAAKA,KAAKoH,KAAV,gBAJM,EAP1B,qDAeamB,GACL,IAAM1F,EAAM0F,EAAMC,cAAeC,aAAa,aACxCC,EAAQH,EAAMC,cAAN,MACd5J,KAAKiC,UAAS,SAAShB,GAEnB,OADAA,EAAMsI,UAAUtF,GAAM6F,EACf7I,OApBnB,6BAwBW0I,GAAsB,IAAD,OACxBA,EAAMI,iBACH/J,KAAKiB,MAAMsI,UAAX,WAAqCvJ,KAAKiB,MAAMsI,UAAX,UACpC0B,EAAiB9K,+BAA+BH,KAAKiB,MAAMsI,UAAX,MAA+BvJ,KAAKiB,MAAMsI,UAAX,UAC9ElI,MAAK,SAAC2B,GACH/E,OAAOiM,MAAM,gDACb,EAAKjI,SAAS,CACV+I,UAAU,OAGjB1J,OAAM,SAAS6I,GACZlM,OAAOiM,MAAM,8FAnC7B,uJAyCce,EAAiB9J,cAzC/B,OA0CW8J,EAAiBtL,KAAKoC,aACrB/B,KAAKiC,SAAS,CACV+I,UAAU,IA5C1B,gJAkDQhL,KAAKoB,SAlDb,+BAsDQ,OAAGpB,KAAKiB,MAAM+J,SAEN,kBAAC,IAAD,CAAUvJ,GAAG,MAIjB,6BACI,0BAAMG,MAAO,CAACwI,QAAQ,OAAQC,SAAUrK,KAAK0J,QACzC,2CACA,8BAAUnI,UAAU,eAEhB,4BAAQA,UAAU,YAAYK,MAAO,CAACgJ,SAAS,UAA/C,SAEA,yBAAKrJ,UAAU,aACX,2BAAOgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,QAAQjJ,UAAU,WAAWkJ,KAAK,QAAQC,YAAY,WAGpG,4BAAQnJ,UAAU,YAAYK,MAAO,CAACgJ,SAAS,UAA/C,iBAEA,yBAAKrJ,UAAU,aACX,2BAAOgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,WAAWjJ,UAAU,WAAWkJ,KAAK,WAAWC,YAAY,cAG1G,4BAAQnJ,UAAU,YAAYK,MAAO,CAACgJ,SAAS,UAA/C,yBAEA,yBAAKrJ,UAAU,aACX,2BAAOgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,kBAAkBjJ,UAAU,WAAWkJ,KAAK,WAAWC,YAAY,aAGjH,4BAAQnJ,UAAU,8BAA8BuJ,KAAK,UAArD,uBAnFxB,GAAqC9L,IAAMkD,WCD9BgJ,EAAb,kDAMI,WAAY9C,GAAW,IAAD,8BAClB,cAAMA,IALVnH,MAAY,CACRsI,UAAU,IAKV,EAAKE,SAAW,EAAKA,SAASjB,KAAd,gBAChB,EAAKkB,OAAS,EAAKA,OAAOlB,KAAZ,gBAHI,EAN1B,qDAaamB,GACL,IAAM1F,EAAM0F,EAAMC,cAAeC,aAAa,aACxCC,EAAQH,EAAMC,cAAN,MACd5J,KAAKiC,UAAS,SAAShB,GAEnB,OADAA,EAAMsI,UAAUtF,GAAM6F,EACf7I,OAlBnB,6BAsBW0I,GACHA,EAAMI,iBACNkB,EAAiB7K,2BAA2BJ,KAAKiB,MAAMsI,UAAX,MAA+BvJ,KAAKiB,MAAMsI,UAAX,UAC1ElI,MAAK,SAAS2B,GACX0E,QAAQC,IAAI,WAEfrG,OAAM,SAAS6I,GACZlM,OAAOiM,MAAM,cA7BzB,4EAsCQ,OACI,6BACI,0BAAMtI,MAAO,CAACwI,QAAQ,OAAQC,SAAUrK,KAAK0J,QACzC,uCACA,8BAAUnI,UAAU,eAEhB,4BAAQA,UAAU,YAAYK,MAAO,CAACgJ,SAAS,UAA/C,SAEA,yBAAKrJ,UAAU,aACX,2BAAOgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,QAAQjJ,UAAU,WAAWkJ,KAAK,QAAQC,YAAY,WAGpG,4BAAQnJ,UAAU,YAAYK,MAAO,CAACgJ,SAAS,UAA/C,YAEA,yBAAKrJ,UAAU,aACX,2BAAOgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,WAAWjJ,UAAU,WAAWkJ,KAAK,WAAWC,YAAY,cAG1G,4BAAQnJ,UAAU,8BAA8BuJ,KAAK,UAArD,kBAxDxB,GAAqC9L,IAAMkD,W,gBCI9BiJ,EAAb,WAII,aAAsB,oBAJ1B,+FAcoBC,GAdpB,0EAeYC,EAAW3L,EAASE,UAAUmE,WAAW,OAAOC,MAAMC,GACtDvE,EAASC,KAAKoC,YAhB1B,sBAiBkB,IAAIyB,MAAM,gDAjB5B,UAmBQ4H,EAAQtI,OAASpD,EAASC,KAAKoC,YAAY0B,IACvCtB,EAAamJ,gBAAgBF,GApBzC,sBAqBkB,IAAI5H,MAAM,oBArB5B,uBAuB6B9D,EAASE,UAAUmE,WAAW,OAClDqB,MAAM,SAAU,KAAMgG,EAAQtI,QAC9BsC,MAAM,QAAS,KAAMgG,EAAQrI,OAC7B2B,MA1BT,mBA2BoB6G,KAAO,GA3B3B,uBA4BkB,IAAI/H,MAAM,yCA5B5B,eA+BQ4H,EAAQ1H,OAASN,EAAWO,OAC5ByH,EAAQxH,UAAYlE,EAASmE,mBAhCrC,UAiCcnE,EAASE,UAAUmE,WAAW,OAAOC,IAAIqH,GAAUnH,IAAIkH,GAjCrE,iCAkCeC,GAlCf,yKAqCiBlH,GArCjB,0EAsCYzE,EAASC,KAAKoC,YAtC1B,0CAuCmB,GAvCnB,uBAyCwB/B,KAAKwL,QAAQrH,GAzCrC,cAyCYsH,EAzCZ,yBA0CeA,EAAIF,KAAO,GA1C1B,oLA6CwBG,GA7CxB,uFA8CwBhM,EAASE,UAAUmE,WAAW,WAAWC,IAAI0H,GAAQhH,MA9C7E,cA8CYV,EA9CZ,yBA+CoBA,EAAIhB,QA/CxB,wKAkDiB2I,GAlDjB,yFAmD2BjM,EAASE,UAAUmE,WAAW,OAAOC,IAAI2H,GAAOjH,MAnD3E,cAmDYkH,EAnDZ,OAoDYC,EApDZ,2BAoD+CD,EAAO5I,QApDtD,IAoD8DiB,GAAI2H,EAAO3H,KApDzE,kBAqDe4H,GArDf,yKAyDkB1H,GAzDlB,0EA0DYzE,EAASC,KAAKoC,YA1D1B,sBA2DkB,IAAIyB,MAAM,8DA3D5B,uBA6D6B9D,EAASE,UAAUmE,WAAW,OAClDqB,MAAM,SAAU,KAAM1F,EAASC,KAAKoC,YAAY0B,KAChD2B,MAAM,QAAS,KAAMjB,GACrBO,MAhET,cA6DYoH,EA7DZ,yBAiEeA,GAjEf,gLAoEyB3H,GApEzB,uFAqE6BzE,EAASE,UAAUmE,WAAW,OAClDqB,MAAM,QAAS,KAAMjB,GACrBO,MAvET,cAqEYoH,EArEZ,yBAwEeA,GAxEf,kLA2E2B3H,EAAgBa,EAAkBC,EAAkBC,GA3E/E,kFA+EQC,GAHIA,EAAQzF,EAASE,UAAUmE,WAAW,OACzCqB,MAAM,QAAS,KAAMjB,IAEHkB,QAAQ,YAAa,OACrCL,GACCG,EAAaA,EAAMH,WAAWA,GAC3BE,IACCC,EAAaA,EAAMD,MAAMA,KAExBD,GACLE,EAAaA,EAAMG,UAAUL,GAC1BC,IACCC,EAAaA,EAAMI,YAAYL,KAGhCA,IACCC,EAAaA,EAAMD,MAAMA,IA5FzC,SA+F2BC,EAAMT,MA/FjC,cA+FYc,EA/FZ,OAgGYC,EAAuC,GAE3CD,EAAOG,KAAKK,SAAQ,SAACJ,GACjB,IAAI7C,EAAiD6C,EAAQ5C,OAC7DD,EAAMa,UAAYb,EAAMa,UAAUiC,SAClC9C,EAAMkB,GAAK2B,EAAQ3B,GACnBwB,EAAeK,KAAK/C,MAtGhC,kBAyGe0C,GAzGf,sLA4GyBtB,GA5GzB,uFA6G6BzE,EAASE,UAAUmE,WAAW,OAClDqB,MAAM,QAAS,KAAMjB,GACrBe,MAAM,GACNR,MAhHT,cA6GYoH,EA7GZ,0BAiHgBA,EAASC,OAjHzB,2KAoHoB5H,GApHpB,6FAqHyBnE,KAAKwL,QAAQrH,GArHtC,aAqHY6H,EArHZ,QAsHgBT,KAAK,GAtHrB,+BAuH6BS,EAAKrG,MAvHlC,gEAuHsBkG,EAvHtB,2BAyH0BA,EAAI1F,IAAI3B,OAAO,CACjBd,OAAQN,EAAW6I,YA1H3C,6IAAArD,EAAA,yPAiIoB+C,GAjIpB,0FAmIkBjM,EAASE,UAAUoE,IAAnB,cAA8B2H,IAASnH,OAAO,CAChDd,OAAQN,EAAW8I,WApInC,4DAuIkB,IAAI1I,MAAM,0BAvI5B,wLA2IoBmI,GA3IpB,0FA6IkBjM,EAASE,UAAUoE,IAAnB,cAA8B2H,IAASnH,OAAO,CAChDd,OAAQN,EAAW+I,WA9InC,4DAiJkB,IAAI3I,MAAM,4BAjJ5B,gJAUQ,OADAxD,KAAKe,UAAYf,KAAKe,UAAYf,KAAKe,UAAY,IAAIoK,EAChDnL,KAAKe,cAVpB,KAAaoK,EAEMpK,e,EAsJJoK,QAAf,SC9JaiB,EAAb,WAMI,aAAsB,oBAN1B,0DAIQ,OADApM,KAAKe,UAAYf,KAAKe,UAAYf,KAAKe,UAAY,IAAIqL,EAChDpM,KAAKe,cAJpB,+CAUcsL,EAAgBC,GACtBC,MAAMC,MAAMC,SAASC,eAAeL,IAAUM,KAAKL,GAAoB,MAX/E,gCAccD,EAAgBC,GACtBC,MAAMC,MAAMC,SAASC,eAAeL,IAAUO,KAAKN,GAAoB,QAf/E,KAAaF,EACMrL,e,EAoBJqL,QAAf,SChBaS,EAAb,WAEI,aAAsB,oBAF1B,6FASkBC,EAAgBC,EAAapB,GAT/C,gFAUYjM,EAASC,KAAKoC,YAV1B,sBAWkB,IAAIyB,MAAM,kCAX5B,UAaYsJ,GAAYC,GAASpB,EAbjC,sBAckB,IAAInI,MAAM,0BAd5B,uBAgB8B2H,EAAW6B,OAAOrB,GAhBhD,cAgBYsB,EAhBZ,OAiBYC,EAAkC,CAClCJ,UAASC,KAAMI,SAASJ,GAAOpB,QAAO7I,OAAM,UAAEpD,EAASC,KAAKoC,mBAAhB,aAAE,EAA2B0B,IACzE2J,UAAWH,EAAUnK,OAAO,GAC5Bc,UAAWlE,EAASmE,mBACpBM,QAAS,MArBrB,UAuB6BnE,KAAKqN,aAAa1B,GAvB/C,0CAyBiB,IAAInI,MAAM,6CAzB3B,yBA2B2B9D,EAASE,UAAUmE,WAAnB,UAAwCuJ,IAAIJ,GA3BvE,eA2BYK,EA3BZ,yBA4BeA,EAAOtJ,IA5BtB,qLAgCoB6I,EAAgBC,EAAa5I,GAhCjD,gFAiCYzE,EAASC,KAAKoC,YAjC1B,sBAkCkB,IAAIyB,MAAM,kCAlC5B,UAoCYsJ,GAAYC,GAAS5I,EApCjC,sBAqCkB,IAAIX,MAAM,0BArC5B,uBAuC0BH,EAAamK,SAASrJ,GAvChD,cAuCYpB,EAvCZ,OAwCYmK,EAAoC,CACpCJ,UAASC,KAAMI,SAASJ,GAAO5I,UAASrB,OAAM,UAAEpD,EAASC,KAAKoC,mBAAhB,aAAE,EAA2B0B,IAC3E2J,UAAWrK,EAAMD,OAAO,GACxBc,UAAWlE,EAASmE,mBACpB8H,MAAO,MA5CnB,UA8C6B3L,KAAKyN,eAAetJ,GA9CjD,0CAgDiB,IAAIX,MAAM,gDAhD3B,yBAkD2B9D,EAASE,UAAUmE,WAAnB,UAAwCuJ,IAAIJ,GAlDvE,eAkDYK,EAlDZ,yBAmDeA,EAAOtJ,IAnDtB,0LAsDyBE,GAtDzB,0EAuDYzE,EAASC,KAAKoC,YAvD1B,0CAwDmB,GAxDnB,uBA0D6BrC,EAASE,UAAUmE,WAAnB,UACpBqB,MAAM,SAAU,KAAM1F,EAASC,KAAKoC,YAAY0B,KAChD2B,MAAM,UAAW,KAAMjB,GACvBe,MAAM,GAAGR,MA7DlB,cA0DYoH,EA1DZ,0BA8DgBA,EAASC,OA9DzB,mLAiE4B5H,EAAgBa,EAAkBC,EAAkBC,EAAewI,GAjE/F,kFAsEQvI,GAHIA,EAAQzF,EAASE,UAAUmE,WAAW,UACzCqB,MAAM,UAAW,KAAMjB,IAELkB,QAAQ,YAAa,OACrCL,GACCG,EAAaA,EAAMH,WAAWA,GAC3BE,IACCC,EAAaA,EAAMD,MAAMA,KAExBD,GACLE,EAAaA,EAAMG,UAAUL,GAC1BC,IACCC,EAAaA,EAAMI,YAAYL,KAGhCA,IACCC,EAAaA,EAAMD,MAAMA,IAnFzC,SAsF2BC,EAAMT,MAtFjC,cAsFYc,EAtFZ,OAuFYC,EAAgCD,EAAOG,KAAKmD,KAAI,SAAA6E,GAChD,IAAI5K,EAAmC4K,EAAS3K,OAGhD,OAFAD,EAAMa,UAAYb,EAAMa,UAAUiC,SAClC9C,EAAMkB,GAAK0J,EAAS1J,GACblB,KA3FnB,kBA6Fe0C,GA7Ff,0LAwG2B2H,EAAkBQ,EAA0B5I,EAAkBC,EAAkBC,GAxG3G,gFAyGYC,EAAQzF,EAASE,UAChBmE,WAAW,UACXqB,MAAM,YAAa,KAAMgI,GAEZ,UAAfQ,EACCzI,EAAQA,EAAMC,MAAM,QAAS,KAAM,MACf,QAAfwI,IACLzI,EAAQA,EAAMC,MAAM,UAAW,KAAM,OAGzCD,EAAaA,EAAME,QAAQ,YAAa,OACrCL,GACCG,EAAaA,EAAMH,WAAWA,GAC3BE,IACCC,EAAaA,EAAMD,MAAMA,KAExBD,GACLE,EAAaA,EAAMG,UAAUL,GAC1BC,IACCC,EAAaA,EAAMI,YAAYL,KAGhCA,IACCC,EAAaA,EAAMD,MAAMA,IAhIzC,SAmI2BC,EAAMT,MAnIjC,cAmIYc,EAnIZ,yBAoIgCA,EAAOG,KAAKmD,KAAI,SAAA6E,GACpC,IAAI5K,EAAmC4K,EAAS3K,OAGhD,OAFAD,EAAMa,UAAYb,EAAMa,UAAUiC,SAClC9C,EAAMkB,GAAK0J,EAAS1J,GACblB,MAxInB,sLA4IuB4I,GA5IvB,0EA6IYjM,EAASC,KAAKoC,YA7I1B,0CA8ImB,GA9InB,uBAgJ6BrC,EAASE,UAAUmE,WAAnB,UACpBqB,MAAM,SAAU,KAAM1F,EAASC,KAAKoC,YAAY0B,KAChD2B,MAAM,QAAS,KAAMuG,GACrBzG,MAAM,GAAGR,MAnJlB,cAgJYoH,EAhJZ,0BAoJgBA,EAASC,OApJzB,mIAMQ,OADA/L,KAAKe,UAAYf,KAAKe,UAAYf,KAAKe,UAAY,IAAI8L,EAChD7M,KAAKe,cANpB,KAAa8L,EACM9L,e,EAwJJ8L,QAAf,SC1JqBgB,E,kDAkBjB,WAAYzF,GAAW,IAAD,8BAClB,cAAMA,IAjBVnH,MAMI,CACAsI,UAAU,CACNwD,KAAM,IACND,QAAS,IAEb5L,QAAS,CACL4M,QAAQ,IAMZ,EAAK1M,KAAO,EAAKA,KAAKoH,KAAV,gBACZ,EAAKuF,KAAO,EAAKA,KAAKvF,KAAV,gBACZ,EAAKwF,SAAW,EAAKA,SAASxF,KAAd,gBAChB,EAAKyF,WAAa,EAAKA,WAAWzF,KAAhB,gBALA,E,wKAWlB,IACIxI,KAAKkO,aAAY,WACb,IAAIC,EAASlQ,OACb,IACIkQ,EAAG5B,MAAMC,MAAMC,SAASC,eAAe,EAAKtE,MAAMiE,UAAUO,OAC/D,MAAMhE,GACHlB,QAAQC,IAAI,CAACiB,UAGxB,MAAMA,GACHlB,QAAQC,IAAI,CAACiB,MACblB,QAAQC,IAAI,0B,uIAIToB,EAAYe,GACnB9J,KAAKiC,UAAS,SAASmM,GAEnB,OADAA,EAAKlN,QAAQ6H,GAAOe,EACbsE,O,kCAIHC,GACR,IAAIC,EAAWC,aAAY,WACVtQ,OACPsO,QACFiC,cAAcF,GACdD,OAEL,M,0CAIHrO,KAAKoB,S,0IAILpB,KAAKiO,WAAW,UAAU,G,UAEnBjO,KAAKoI,MAAMjE,Q,wBACVuD,QAAQC,IAAI,gB,SACNkF,EAAY4B,UAAUzO,KAAKiB,MAAMsI,UAAUuD,QAAS9M,KAAKiB,MAAMsI,UAAUwD,KAAM/M,KAAKoI,MAAMjE,S,OAChGlG,OAAOiM,MAAM,wBACbkC,EAAasC,UAAU1O,KAAKoI,MAAMiE,S,4BAC7BrM,KAAKoI,MAAMuD,M,wBAChBjE,QAAQC,IAAI,c,UACNkF,EAAY8B,QAAQ3O,KAAKiB,MAAMsI,UAAUuD,QAAS9M,KAAKiB,MAAMsI,UAAUwD,KAAM/M,KAAKoI,MAAMuD,O,QAC9F1N,OAAOiM,MAAM,sBACbkC,EAAasC,UAAU1O,KAAKoI,MAAMiE,S,wBAElC3E,QAAQC,IAAI,sBACZD,QAAQC,IAAI3H,KAAKoI,O,0DAGrBV,QAAQC,IAAI,CAACiB,EAAC,OACd3K,OAAOiM,MAAM,gB,QAGjBlK,KAAKiO,WAAW,UAAU,G,+KAMrBtE,GACL,IAAIiF,EAAYjF,EAAMC,cAClBE,EAAQ8E,EAAM9E,MAAO7F,EAAK2K,EAAM3K,GAEpCjE,KAAKiC,UAAS,SAAShB,GAEnB,OADAA,EAAMsI,UAAUtF,GAAM6F,EACf7I,O,+BAcX,OACI,6BACI,yBAAKgD,GAAIjE,KAAKoI,MAAMiE,SAChB,yBAAK9K,UAAU,iCACf,wBAAIA,UAAU,kBAAd,0BACI,8BAAUA,UAAU,eAChB,yBAAKA,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,eACA,yBAAK/I,UAAU,oBACX,4BAAQgJ,SAAUvK,KAAKgO,SAAUzM,UAAU,YAAY0C,GAAG,QACtD,4BAAQ6F,MAAM,KAAd,OACA,4BAAQA,MAAM,MAAd,OACA,4BAAQA,MAAM,MAAd,OACA,4BAAQA,MAAM,MAAd,OACA,4BAAQA,MAAM,MAAd,OACA,4BAAQA,MAAM,OAAd,UAIZ,yBAAKvI,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,gBACA,yBAAK/I,UAAU,oBACX,8BAAUgJ,SAAUvK,KAAKgO,SAAU/J,GAAG,UAAU1C,UAAU,mBAItE,4BAAQsN,SAAU7O,KAAK8O,UAAWvN,UAAU,8BAA8BkJ,KAAK,SAAS3I,QAAS9B,KAAK+N,MAAtG,QACA,4BAAQc,SAAU7O,KAAK8O,UAAWvN,UAAU,6CAA6CkJ,KAAK,UAA9F,c,gCApChB,IAAI,IAAJ,MAAiBsE,OAAOC,KAAKhP,KAAKiB,MAAMC,SAAxC,eAAiD,CAA7C,IAAM6H,EAAG,KACT,GAAG/I,KAAKiB,MAAMC,QAAQ6H,GAClB,OAAO,EAGf,OAAO,M,GA7G0B/J,IAAMkD,WCI1B+M,E,kDA8BjB,WAAY7G,GAAW,IAAD,8BAClB,cAAMA,IA7BVnH,MAaI,CACA+K,KAAK,GACL9K,SAAS,EACTgO,WAAW,GACXC,kBAAkB,GAClBC,KAAM,KACNC,eAAgB,GAChBC,UAAW,CACPtK,WAAY,KACZC,WAAY,KACZC,MAAO,EACPoD,KAAM,IAMV,EAAKlH,KAAO,EAAKA,KAAKoH,KAAV,gBACZ,EAAKyF,WAAa,EAAKA,WAAWzF,KAAhB,gBAClB,EAAK+G,UAAY,EAAKA,UAAU/G,KAAf,gBACjB,EAAKgH,SAAW,EAAKA,SAAShH,KAAd,gBAChB,EAAKiH,SAAW,EAAKA,SAASjH,KAAd,gBAChB,EAAKkH,SAAW,EAAKA,SAASlH,KAAd,gBAChB,EAAKmH,SAAW,EAAKA,SAASnH,KAAd,gBARE,E,uDAWXtH,GACPlB,KAAKiC,SAAS,CAACf,c,yEAGHyK,G,wEACZ3L,KAAKiO,YAAW,G,kBAEN9C,EAAWyE,UAAUjE,G,uBACrB3L,KAAKoB,O,uDAEXnD,OAAOiM,MAAM,4B,QAEjBlK,KAAKiO,YAAW,G,kRAYsBjO,KAAKiB,MAAMqO,UAA5CtK,E,EAAAA,WAAYC,E,EAAAA,WAAYC,E,EAAAA,MAC7BlF,KAAKiO,YAAW,GAChBvG,QAAQC,IAAI,CACR3C,aAAYC,aAAYC,U,SAEXiG,EAAW0E,iBAAiB7P,KAAK8P,OAAjC,OAAyC9K,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAYpB,UAArD,OAAgEqB,QAAhE,IAAgEA,OAAhE,EAAgEA,EAAYrB,UAAWsB,G,OAApG8G,E,OACJhM,KAAKiC,UAAS,SAAShB,GAInB,OAHAA,EAAK,KAAW+K,EAChB/K,EAAK,UAAc+D,WAAagH,EAAK,GACrC/K,EAAK,UAAcgE,WAAa+G,EAAKA,EAAKnJ,OAAO,GAC1C5B,KAEXjB,KAAKiO,YAAW,GAChBjO,KAAKiC,SAAS,CACV+J,S,uQAKa3I,EAAagE,WAAWrH,KAAK8P,QAAQ,G,OAAlDV,E,OACJpP,KAAKiC,SAAS,CAACmN,S,6PAOXpP,KAAKiO,YAAW,G,SACVzN,QAAQuP,IAAI,CAAC/P,KAAKwP,WAAYxP,KAAKyP,a,OACzCzP,KAAKiO,YAAW,G,gDAEhBvG,QAAQC,IAAI,CAACiB,EAAC,OACd5I,KAAKiO,YAAW,GAChBvG,QAAQC,IAAI,yB,yJAKhB3H,KAAKoB,OACJE,OAAM,SAAS6I,GACZzC,QAAQC,IAAI,yBAEC8E,SAASC,eAAe,iBAClCsD,aAAa,WAAW,M,8EAGdrE,G,gFACjB3L,KAAKiO,YAAW,GAChB7B,EAAa6D,UAAU,iBACnBpE,EAAU7L,KAAKiB,MAAM+K,KAAKkE,MAAK,SAAA5P,GAAO,OAAIA,EAAQ2D,KAAO0H,K,SACzCR,EAAWgF,cAActE,EAAI/I,Q,OAA7CsN,E,OACJpQ,KAAKiC,SAAS,CACViN,WAAYrD,EACZsD,kBAAmBiB,IAEvBpQ,KAAKiO,YAAW,G,uIAGV3N,GACN,OAAQA,EAAQoD,QACZ,KAAKN,EAAWO,OACZ,MAAO,SACX,KAAKP,EAAW8I,SACZ,MAAO,WACX,KAAK9I,EAAW6I,UACZ,MAAO,YACX,KAAK7I,EAAW+I,SACZ,MAAO,YACX,QACI,OAAO7L,EAAQoD,U,yEAIXiI,G,wEACZ3L,KAAKiO,YAAW,G,kBAEN9C,EAAWoE,UAAU5D,G,uBACrB3L,KAAKoB,O,uDAEXnD,OAAOiM,MAAM,uB,QAEjBlK,KAAKiO,YAAW,G,8IAGZtC,GACJ3L,KAAKiC,SAAS,CACVoN,eAAgB1D,IAEpBS,EAAa6D,UAAU,iB,iCAGhB,IAAD,OACHjQ,KAAKiB,MAAMqO,UAAUhH,KAAO,IAC3BtI,KAAKiO,YAAW,GAChBjO,KAAKiC,UAAS,SAAS4G,GAInB,OAHAA,EAAQ,UAAc5D,WAAa4D,EAAQ,UAAc7D,WACzD6D,EAAQ,UAAc7D,WAAa,KACnC6D,EAAQ,UAAcP,MAAM,EACrBO,KACR,WACC,EAAKoF,YAAW,GAChB,EAAKuB,iB,iCAKN,IAAD,OACHxP,KAAKiB,MAAM+K,KAAKnJ,QAAU7C,KAAKiB,MAAMqO,UAAUpK,QAC9ClF,KAAKiO,YAAW,GAChBjO,KAAKiC,UAAS,SAAS4G,GAInB,OAHAA,EAAQ,UAAc7D,WAAa6D,EAAQ,UAAc5D,WACzD4D,EAAQ,UAAc5D,WAAa,KACnC4D,EAAQ,UAAcP,MAAM,EACrBO,KACR,WACC,EAAKoF,YAAW,GAChB,EAAKuB,iB,+BAKR,IAAD,OACJ,OACI,6BACI,qCACA,2BAAOjO,UAAU,YACb,+BACI,4BACI,0CACA,kDAGR,+BAEQvB,KAAKiB,MAAM+K,KAAKlD,KAAI,SAACxI,GAAD,OAChB,wBACAiB,UAAS,4CACPjB,EAAQoD,SAAWN,EAAW8I,SAAW,YAAc,GADhD,6CAEP5L,EAAQoD,SAAWN,EAAW+I,SAAW,YAAc,GAFhD,sCAITpD,IAAKzI,EAAQ2D,IACT,4BAAK3D,EAAQ2D,IACb,4BACI,4BAAQ1C,UAAU,YAAYsN,SAAU,EAAK5N,MAAMC,QAASY,QAAS,SAACuO,GAAD,OAAM,EAAKC,eAAehQ,EAAQ2D,IAAM,MAA7G,WAEI,EAAKhD,MAAMmO,MAAQ,EAAKnO,MAAMmO,KAAK1L,SAAWP,EAAaQ,OACvDrD,EAAQoD,SAAWN,EAAWO,OAC1B,oCACI,4BAAQpC,UAAU,YAAYsN,SAAU,EAAK5N,MAAMC,QAASY,QAAS,kBAAM,EAAK8N,UAAUtP,EAAQ2D,IAAM,MAAxG,UACA,4BAAQ1C,UAAU,YAAYsN,SAAU,EAAK5N,MAAMC,QAASY,QAAS,kBAAM,EAAKyN,UAAUjP,EAAQ2D,IAAM,MAAxG,WAEN,oCAEM3D,EAAQoD,SAAWN,EAAW8I,SAC9B,oCACI,4BAAQ3K,UAAU,YAAYsN,SAAU,EAAK5N,MAAMC,QAASY,QAAS,kBAAI,EAAK6M,QAAQrO,EAAQ2D,IAAM,MAApG,aACA,sCAGd,2CAO1B,+BACI,4BACI,4BAAI,4BAAQ1C,UAAU,YAAYsN,SAAU7O,KAAKiB,MAAMC,QAASY,QAAS9B,KAAK0P,UAA1E,uBACJ,wBAAI9N,MAAO,CAACyH,UAAU,UAAU,4BAASwF,SAAU7O,KAAKiB,MAAMC,QAASK,UAAU,YAAYO,QAAS9B,KAAK2P,UAA3E,4BAK5C,yBAAK1L,GAAG,iBACJ,yBAAK1C,UAAU,iCACf,wBAAIA,UAAU,kBAAd,WAAwCvB,KAAK6L,IAAI5H,IAC7C,sCAAW,2BAAIjE,KAAKuQ,UAAUvQ,KAAKiB,MAAMiO,cACzC,uCACA,uCAJJ,IAIqBlP,KAAKiB,MAAMkO,kBAAkBlM,SAC9C,6BACA,oCANJ,IAMkBjD,KAAKiB,MAAMkO,kBAAkBjM,MAC3C,6BACA,oCARJ,IAQkBlD,KAAKiB,MAAMkO,kBAAkBlP,MAC3C,6BACA,4BAAQsB,UAAU,6CAA6CkJ,KAAK,UAApE,WAGR,kBAAC,EAAD,CAAa4B,QAAS,cAAeV,MAAO3L,KAAKiB,MAAMoO,oB,0BApM/D,OAAOrP,KAAKiB,MAAMiO,a,6BAIlB,OAAOlP,KAAKoI,MAAMhK,MAAQ4B,KAAKoI,MAAMhK,MAAMoS,OAAOV,OAAS,O,GA7D3B9Q,IAAMkD,WCHzBuO,E,kDAsBjB,WAAYrI,GAAW,IAAD,8BAClB,cAAMA,IArBVnH,MASI,CACAyP,QAAS,GACTxP,SAAS,EACTyP,OAAQ,CACJ3L,WAAW,KACXC,WAAW,KACXC,MAAO,EACPoD,KAAM,IAMV,EAAKlH,KAAO,EAAKA,KAAKoH,KAAV,gBACZ,EAAKyF,WAAa,EAAKA,WAAWzF,KAAhB,gBAClB,EAAKoI,YAAc,EAAKA,YAAYpI,KAAjB,gBACnB,EAAKqI,SAAW,EAAKA,SAASrI,KAAd,gBAChB,EAAKsI,SAAW,EAAKA,SAAStI,KAAd,gBANE,E,uDASXtH,GACPlB,KAAKiC,SAAS,CAACf,c,uJAwBTxB,EAASyB,c,OACf,IACInB,KAAK4Q,cACR,MAAMhI,GACHlB,QAAQC,IAAI,CAACiB,MACb3K,OAAOiM,MAAM,0B,iQAKjBlK,KAAKiO,YAAW,G,SAERyC,EAAwC,IACzC1Q,KAAK2L,M,gBACJjE,QAAQC,IAAI,kB,2BACP3H,KAAK8P,O,kCACMjD,EACfkE,kBAAkB/Q,KAAK8P,QAAU,GADlB,UAEZ9P,KAAKiB,MAAM0P,OAAO3L,kBAFN,aAEZ,EAA8BpB,UAFlB,UAGZ5D,KAAKiB,MAAM0P,OAAO1L,kBAHN,aAGZ,EAA8BrB,UAC9B5D,KAAKiB,MAAM0P,OAAOzL,O,QAJtBwL,E,mCAKK1Q,KAAKoN,U,kCACMP,EAAYmE,iBAAiBhR,KAAKoN,UAAWpN,KAAK4N,WAAY5N,KAAKiB,MAAM0P,OAAO3L,WAAYhF,KAAKiB,MAAM0P,OAAO1L,WAAYjF,KAAKiB,MAAM0P,OAAOzL,O,QAA5JwL,E,eAEJ1Q,KAAKiC,UAAS,SAAShB,GAInB,OAHAA,EAAK,QAAcyP,EACnBzP,EAAK,OAAW+D,WAAa0L,EAAQ,GACrCzP,EAAK,OAAWgE,WAAayL,EAAQA,EAAQ7N,OAAO,GAC7C5B,K,kDAGXyG,QAAQC,IAAI,CAACiB,EAAC,OACd3K,OAAOiM,MAAM,8B,QAEjBlK,KAAKiO,YAAW,G,0JAIhBjO,KAAKoB,S,gCAGCmM,GACN,OAAQJ,SAASI,EAAOR,KAAK,IAAI,GAAI,O,iCAG9B,IAAD,OACH/M,KAAKiB,MAAM0P,OAAOrI,KAAO,IACxBtI,KAAKiO,YAAW,GAChBjO,KAAKiC,UAAS,SAAS4G,GAInB,OAHAA,EAAQ,OAAW5D,WAAa4D,EAAQ,OAAW7D,WACnD6D,EAAQ,OAAW7D,WAAa,KAChC6D,EAAQ,OAAWP,MAAM,EAClBO,KACR,WACC,EAAKoF,YAAW,GAChB,EAAK2C,oB,iCAKN,IAAD,OACH5Q,KAAKiB,MAAMyP,QAAQ7N,QAAU7C,KAAKiB,MAAM0P,OAAOzL,QAC9ClF,KAAKiO,YAAW,GAChBjO,KAAKiC,UAAS,SAAS4G,GAInB,OAHAA,EAAQ,OAAW7D,WAAa6D,EAAQ,OAAW5D,WACnD4D,EAAQ,OAAW5D,WAAa,KAChC4D,EAAQ,OAAWP,MAAM,EAClBO,KACR,WACC,EAAKoF,YAAW,GAChB,EAAK2C,oB,8BAKTtQ,GACJ,OAAOA,EAAQsD,UAAU,K,gCAGnB,IAAD,OACDqN,EAAiBjR,KAAKiB,MAAMyP,QAChC,GAAGO,GAAYA,EAASpO,OACpB,OAAOoO,EAASnI,KAAI,SAAAxI,GAAO,OACvB,yBAAKiB,UAAU,uBAAuBwH,IAAKzI,EAAQ2D,GACnDrC,MAAO,CACHsP,OAAQ,iBACRC,aAAc,OACdC,OAAQ,UAER,2BAAI,EAAKC,UAAU/Q,IANvB,IAMqC,+BAAQ,EAAK0I,QAAQ1I,IACtD,6BACCA,EAAQwM,c,+BAOrB,OACI,6BACI,2BAAOvL,UAAU,YACb,+BACI,4BACI,wBAAI6H,QAAS,GACT,uCAGIpJ,KAAKsR,aAKrB,+BACI,4BACI,4BACI,4BAAQ/P,UAAU,YAAYsN,SAAU7O,KAAKiB,MAAMC,QAASY,QAAS9B,KAAK8Q,UAA1E,uBAEJ,wBAAIlP,MAAO,CAACyH,UAAU,UAClB,4BAAQ9H,UAAU,YAAasN,SAAU7O,KAAKiB,MAAMC,QAASY,QAAS9B,KAAK6Q,UAA3E,+B,6BA1IxB,OAAO7Q,KAAKoI,MAAMhK,MAAMoS,OAAOV,S,4BAI/B,OAAO9P,KAAKoI,MAAMhK,MAAMoS,OAAO7E,Q,+BAI/B,OAAO3L,KAAKoI,MAAMhK,MAAMoS,OAAOe,W,gCAI/B,OAAOvR,KAAKoI,MAAMhK,MAAMoS,OAAOpD,Y,iCAI/B,OAAOpN,KAAKoI,MAAMhK,MAAMoS,OAAO5C,YAAc,Y,GApDZ5O,IAAMkD,WCUlCsP,EAAb,kDAQI,WAAYpJ,GAAW,IAAD,8BAClB,cAAMA,IAPVnH,MAAY,CACRsI,UAAU,GACVkI,SAAU,GACVC,SAAS,GAKT,EAAKjI,SAAW,EAAKA,SAASjB,KAAd,gBAChB,EAAKkB,OAAS,EAAKA,OAAOlB,KAAZ,gBACd,EAAKmJ,eAAiB,EAAKA,eAAenJ,KAApB,gBACtB,EAAKpH,KAAO,EAAKA,KAAKoH,KAAV,gBACZ,EAAKoJ,WAAa,EAAKA,WAAWpJ,KAAhB,gBANA,EAR1B,qDAkBamB,GACL,IAAM1F,EAAM0F,EAAMC,cAAeC,aAAa,aACxCC,EAAQH,EAAMC,cAAN,MACd5J,KAAKiC,UAAS,SAAShB,GAEnB,OADAA,EAAMsI,UAAUtF,GAAM6F,EACf7I,OAvBnB,6BA2BW0I,GACHA,EAAMI,iBACN1G,EAAawO,YAAY7R,KAAKiB,MAAMsI,UAAWvJ,KAAK8P,QACnDzO,MAAK,SAAS2B,GACX/E,OAAOiM,MAAM,kDAEhB5I,OAAM,SAAS6I,GACZlM,OAAOiM,MAAM,qCAlCzB,uJAiDWlK,KAAKiB,MAAM6Q,YAjDtB,wDAoDQ9R,KAAKiC,SAAS,CACV6P,aAAa,IArDzB,kBAwD6BzO,EAAagE,WAAWrH,KAAK8P,QAxD1D,UAwDgB9M,EAxDhB,6BA0DsB,IAAIQ,MAAM,mBA1DhC,wBA4DgC2H,EAAW4G,eAAe/R,KAAK8P,QA5D/D,QA4DgB4B,EA5DhB,OA6DY1R,KAAKiC,UAAS,SAAS4G,GAGnB,OAFAA,EAAQ,UAAgB7F,EACxB6F,EAAQ,QAAc6I,EACf7I,KAhEvB,kDAmEY5K,OAAOiM,MAAM,wBAnEzB,QAqEQlK,KAAKiC,SAAS,CACV6P,aAAa,IAtEzB,sJA0EoB,IAAD,EACX,UAAArF,SAASC,eAAe,wBAAxB,SAA0CsF,UA3ElD,sJA+EWhS,KAAK8P,OA/EhB,gCAgFkB9P,KAAKyP,WAhFvB,OAmF0BhD,SAASC,eAAe,iBAClCuF,SAAW,SAACtI,GAChB,IAAIiF,EAAQjF,EAAMuI,OAClB,GAAItD,EAAMuD,OAASvD,EAAMuD,MAAM,GAAI,CAC/B,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,SAAC1J,GAEblB,QAAQC,IAAI,6BACZ,EAAK1F,SAAS,CACVwP,SAAU7I,EAAEsJ,OAAOvN,OACnB4N,aAAc3D,EAAMuD,MAAM,MAGlCC,EAAOI,cAAc5D,EAAMuD,MAAM,MAjGjD,gJAuGQnS,KAAKoB,OACJC,MAAK,eAGLC,OAAM,SAASsH,GACZlB,QAAQC,IAAI,CAACiB,MACb3K,OAAOiM,MAAM,4BA7GzB,qJAmHWlK,KAAKiB,MAAMwR,UAnHtB,wDAsHQzS,KAAKiC,SAAS,CACVwQ,WAAW,IAvHvB,kBA0HkBpP,EAAaqP,YAAY1S,KAAK8P,OAAQ9P,KAAKiB,MAAMsR,cA1HnE,OA2HYvS,KAAKiC,SAAS,CACVwP,SAAU,KACVc,aAAc,OAElBvS,KAAKyP,WA/HjB,kDAiIY/H,QAAQC,IAAI,CAACiB,EAAC,OACd3K,OAAOiM,MAAM,yBAlIzB,QAqIQlK,KAAKiC,SAAS,CACVwQ,WAAW,IAtIvB,iQA2IWzS,KAAKiB,MAAM0R,QA3ItB,wDA8IQ3S,KAAKiC,SAAS,CACV0Q,SAAS,IA/IrB,kBAkJkBtP,EAAauO,WAAW5R,KAAK8P,QAlJ/C,uBAmJkB9P,KAAKyP,WAnJvB,OAoJYxR,OAAOiM,MAAM,sCApJzB,kDAsJYxC,QAAQC,IAAI,CAACiB,EAAC,OACd3K,OAAOiM,MAAM,0BAvJzB,QAyJQlK,KAAKiC,SAAS,CACV0Q,SAAS,IA1JrB,2LAgLsBzM,GAhLtB,8EAkLejI,OAAO2U,QAAQ,qCAlL9B,gCAmLsBvP,EAAawP,YAAY7S,KAAK8P,OAAQ5J,GAnL5D,uBAoLsBlG,KAAKyP,WApL3B,OAqLgBxR,OAAOiM,MAAM,8BArL7B,uDAwLYjM,OAAOiM,MAAM,4BAxLzB,+IA4La,IAAD,OACJ,OACI,6BACI,0BAAMtI,MAAO,CAACwI,QAAQ,OAAQC,SAAUrK,KAAK0J,QACzC,sCACA,8BAAUnI,UAAU,eAEhB,yBAAKA,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,aACA,yBAAK/I,UAAU,oBACX,2BAAOsN,UAAW7O,KAAK8S,QAAShJ,MAAO9J,KAAKiB,MAAMsI,UAAX,MAA+BgB,SAAUvK,KAAKyJ,SAAUe,YAAU,QAAQjJ,UAAU,WAAWkJ,KAAK,OAAOC,YAAY,YAItK,yBAAKnJ,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,+BACA,yBAAK/I,UAAU,oBACX,8BAAUsN,UAAW7O,KAAK8S,QAAShJ,MAAO9J,KAAKiB,MAAMsI,UAAX,YAAqCgB,SAAUvK,KAAKyJ,SAAUe,YAAU,cAAcjJ,UAAU,kBAIlJ,yBAAKA,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,oBACA,yBAAK/I,UAAU,oBACX,4BAAQsN,UAAW7O,KAAK8S,QAAShJ,MAAO9J,KAAKiB,MAAMsI,UAAX,eAAwChI,UAAU,YAAY0C,GAAG,sBAAsBsG,SAAUvK,KAAKyJ,SAAUe,YAAU,kBAC9J,wDACA,4BAAQV,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,UAKZ,yBAAKvI,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,sBACA,yBAAK/I,UAAU,oBACX,2BAAOsN,UAAW7O,KAAK8S,QAAShJ,MAAO9J,KAAKiB,MAAMsI,UAAX,cAAuCgB,SAAUvK,KAAKyJ,SAAUe,YAAU,gBAAgBC,KAAK,SAASlJ,UAAU,eAIjK,yBAAKA,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,gBACA,yBAAK/I,UAAU,oBACX,4BAAQsN,UAAW7O,KAAK8S,QAAShJ,MAAO9J,KAAKiB,MAAMsI,UAAX,qBAA8CgB,SAAUvK,KAAKyJ,SAAUe,YAAU,uBAAuBjJ,UAAU,YAAY0C,GAAG,uBACrK,mEACA,4BAAQ6F,MAAM,iBAAd,iBACA,4BAAQA,MAAM,YAAd,eAKZ,yBAAKvI,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,iBACA,yBAAK/I,UAAU,oBACX,4BAAQsN,UAAW7O,KAAK8S,QAAShJ,MAAO9J,KAAKiB,MAAMsI,UAAX,gBAAyCgB,SAAUvK,KAAKyJ,SAAUe,YAAU,kBAAkBjJ,UAAU,YAAY0C,GAAG,uBAC3J,kEACA,4BAAQ6F,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,UAKZ,yBAAKvI,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,sBACA,yBAAK/I,UAAU,oBACX,2BAAOsN,UAAW7O,KAAK8S,QAAShJ,MAAO9J,KAAKiB,MAAMsI,UAAX,eAAwCgB,SAAUvK,KAAKyJ,SAAUe,YAAU,iBAAiBC,KAAK,SAASlJ,UAAU,eAInK,yBAAKA,UAAU,aACX,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,4BACA,yBAAK/I,UAAU,oBACX,4BAAQsN,UAAW7O,KAAK8S,QAAShJ,MAAO9J,KAAKiB,MAAMsI,UAAX,sBAA+CgB,SAAUvK,KAAKyJ,SAAUe,YAAU,wBAAwBjJ,UAAU,YAAY0C,GAAG,uBACvK,mEACA,4BAAQ6F,MAAM,iBAAd,iBACA,4BAAQA,MAAM,YAAd,eAKZ,yBAAKvI,UAAU,kDAAkDwR,kBAAgB,KAAKC,YAAW,IAC7F,wBAAIzR,UAAU,gFAEV,2BAAOkJ,KAAK,OAAOwI,QAAQ,EAAMhP,GAAG,kBAEhCjE,KAAKkT,eACAlT,KAAKiB,MAAMwQ,SAIZ,oCACI,wBAAI7P,MAAO,CAACuR,SAAS,QAASC,UAAU,QAASC,QAAQ,iBACrD,yBAAKC,WAAUtT,KAAKiB,MAAMwQ,SAAU8B,IAAI,aAAaC,SAAQ,KAC7D,4BAAQjS,UAAU,YAAYsN,UAAW7O,KAAKkT,eAAgBtR,MAAO,CAAC6R,gBAAgB,UAAWC,MAAM,SAAU5R,QAAS9B,KAAK2R,gBAA/H,0BANJ,wBAAI/P,MAAO,CAACuR,SAAS,QAASC,UAAU,QAASC,QAAQ,eAAehK,UAAU,WAC9E,4BAAQ9H,UAAU,YAAYsN,UAAW7O,KAAKkT,eAAgBtR,MAAO,CAAC6R,gBAAgB,UAAWC,MAAM,SAAU5R,QAAS9B,KAAK2T,eAA/H,+BAQZ,qCAGA3T,KAAKiB,MAAMwR,UACX,4BACI,wBAAI7Q,MAAO,CAAC8R,MAAM,UAAlB,0BACI,qCAGR1T,KAAKiB,MAAMsI,WAAavJ,KAAKiB,MAAMsI,UAAUhF,OAC7CvE,KAAKiB,MAAMsI,UAAUhF,OAAOuE,KAAI,SAACxI,GAAD,OAC5B,wBAAIyI,IAAKzI,EAAQ2D,IACb,yBAAK2P,IAAKtT,EAAQ2G,YAAarF,MAAO,CAACiS,MAAM,QAAQT,UAAU,WAE3D,EAAKF,eACL,4BAAQ3R,UAAU,YAAYsN,UAAW,EAAKqE,eAAgBtR,MAAO,CAAC6R,gBAAgB,UAAWC,MAAM,SAAU5R,QAAS,kBAAI,EAAK+Q,YAAYvS,KAA/I,sBACE,yCAIV,sCAIZ,uBAAGiB,UAAU,4DAA4DuS,uBAAsB,GAAIC,iBAAgB,aACnH,uBAAGxS,UAAU,6DAA6DyS,mBAAkB,GAAID,iBAAgB,UAGpH,yBAAKxS,UAAU,aACX,4BAAQA,UAAU,YAAYK,MAAO,CAACgJ,SAAS,UAA/C,mBAAyE,2BAAI5K,KAAK6K,gBAIlF7K,KAAK8S,QACL,4BAAQvR,UAAU,8BAA8BuJ,KAAK,UAArD,kBACE9K,KAAKiB,MAAMyQ,QACT,kFACF,qCAGF1R,KAAKiB,MAAMsI,UAAU7F,QAAUP,EAAaQ,OAC5C,oCACI,4BAAQpC,UAAU,8BAA8BO,QAAS9B,KAAK4R,YAA9D,kBACE,oCACN,mDAAwB,2BAAIvO,EAAa4Q,eAAejU,KAAKiB,MAAMsI,UAAU7F,gBAvUzG,mCAyCQ,OAFsB1D,KAAKiB,MAAMsI,UAAX,eAAyC,IACxCvJ,KAAKiB,MAAMsI,UAAX,gBAA0C,KAxCzE,6BA6CQ,OAAOvJ,KAAKoI,MAAMhK,MAAMoS,OAAOV,SA7CvC,qCAgKQ,OAAO9P,KAAK8S,UAAY9S,KAAKkB,UAhKrC,8BAoKQ,OAAOlB,KAAKiB,MAAMwR,WAAazS,KAAKiB,MAAM0R,SAAW3S,KAAKiB,MAAM6M,QAAU9N,KAAKiB,MAAM6Q,cApK7F,8BAwKQ,OAAQ9R,KAAKiB,MAAMsI,UAAU7F,SAAWP,EAAaQ,QAAW3D,KAAKkU,QAAUlU,KAAKkB,UAAYlB,KAAKiB,MAAMyQ,UAxKnH,4BA6KQ,OAAOhS,EAASC,KAAKoC,aAAe/B,KAAKiB,MAAMsI,UAAUzG,QAAUpD,EAASC,KAAKoC,YAAY0B,MAAQzD,KAAKiB,MAAMsI,UAAUzG,WA7KlI,GAA2C9D,IAAMkD,WAkVpCiS,EAAb,kDAoCI,WAAY/L,GAAW,IAAD,8BAClB,cAAMA,IAnCVnH,MAUI,CACAmT,SAAU,CACN9R,eAAgB,EAChBE,gBAAiB,MACjBC,YAAa,IACbF,cAAe,EACfG,eAAgB,MAChBC,qBAAsB,OACtBC,MAAO,IACPsG,sBAAuB,OACvBpG,OAAQ,KACRY,OAAS,KACTE,UAAW,MAEf8N,SAAS,EACT7F,IAAK,KACL3K,QAAQ,CACJ2K,KAAK,EACLuD,MAAM,EACNiF,WAAW,GAEfC,YAAY,GAKZ,EAAK7E,SAAW,EAAKA,SAASjH,KAAd,gBAChB,EAAKvH,MAAMmT,SAAW,CAClB9R,eAAgB,EAChBE,gBAAiB,MACjBC,YAAa,IACbF,cAAe,EACfG,eAAgB,MAChBC,qBAAsB,OACtBC,MAAO,IACPsG,sBAAuB,OACvBpG,OAAQ,KACRY,OAAS,KACTE,UAAW,MAEf,EAAK2Q,SAAW,EAAKA,SAAS/L,KAAd,gBAChB,EAAKgM,UAAY,EAAKA,UAAUhM,KAAf,gBACjB,EAAKyF,WAAa,EAAKA,WAAWzF,KAAhB,gBAlBA,EApC1B,kLAsEQxI,KAAKiO,WAAW,QAAQ,GAtEhC,cAwE+BzN,QAxE/B,SAyEsB6C,EAAagE,WAAWrH,KAAK8P,QAzEnD,mCA0EsBjD,EAAYY,eAAezN,KAAK8P,QA1EtD,0DAwEuCC,IAxEvC,2BAwEgBpL,EAxEhB,OA4EgB3B,EAAO2B,EAAO,GACd2P,EAAa3P,EAAO,GACpB3B,EA9EhB,uBA+EsB,IAAIQ,MAAM,mBA/EhC,QAiFYxD,KAAKiC,UAAS,SAAS4G,GAGnB,OAFAA,EAAQ,SAAe7F,EACvB6F,EAAQ,WAAiByL,EAClBzL,KApFvB,kDAuFYnB,QAAQC,IAAI,CAACiB,EAAC,OACd3K,OAAOiM,MAAM,uBAxFzB,QA0FQlK,KAAKiO,WAAW,QAAQ,GA1FhC,yQA8FQjO,KAAKiO,WAAW,OAAO,GA9F/B,kBAgG6B9C,EAAWK,QAAQxL,KAAK8P,QAhGrD,WAgGgB9D,EAhGhB,QAiGoBT,KAAO,GACXvL,KAAKiC,SAAS,CACV4J,IAAKG,EAAKrG,KAAK,GAAG3C,UAGvBhD,KAAKkU,MAtGpB,iCAuGoC/I,EAAW4G,eAAe/R,KAAK8P,QAvGnE,OAuGoB4B,EAvGpB,OAwGgB1R,KAAKiC,SAAS,CACVyP,YAzGpB,0DA6GYhK,QAAQC,IAAI,CAACwC,IAAG,OA7G5B,QA+GQnK,KAAKiO,WAAW,OAAO,GA/G/B,0JAkHwB,IAAD,OACZjO,KAAK8P,QACJ9P,KAAKyP,WACJpO,MAAK,WACF,EAAKoT,eAtHrB,iCA2He1L,EAAYe,GACnB9J,KAAKiC,UAAS,SAASmM,GAEnB,OADAA,EAAKlN,QAAQ6H,GAAOe,EACbsE,OA9HnB,wJAmIQpO,KAAKiO,WAAW,aAAa,GACzB7C,EAA8B,CAC9BtI,OAAQ,KACRY,OAAQ,KACRX,MAAO/C,KAAK8P,OACZlM,UAAW,MAxIvB,kBA2IkBuH,EAAWuJ,UAAUtJ,GA3IvC,uBA4IkBpL,KAAKyU,UA5IvB,uDA8IY/M,QAAQC,IAAR,MACA1J,OAAOiM,MAAM,6BA/IzB,QAiJQlK,KAAKiO,WAAW,aAAa,GAjJrC,kQAqJQjO,KAAKiO,WAAW,aAAa,GArJrC,kBAuJkB9C,EAAWqJ,UAAUxU,KAAK8P,QAvJ5C,uBAwJkB9P,KAAKyU,UAxJvB,uDA0JY/M,QAAQC,IAAI,CAACiB,EAAC,OACd3K,OAAOiM,MAAM,kBA3JzB,QA6JQlK,KAAKiO,WAAW,aAAa,GA7JrC,iJA6KQ1B,MAAMC,MAAMC,SAASC,eAAe,gBAAgBC,SA7K5D,+BAiLQ,OACI,6BACI,2CAEuC,OAA/B3M,KAAKiB,MAAMmT,SAAS1Q,OACpB,2BACKL,EAAa4Q,eAAejU,KAAKiB,MAAMmT,SAAS1Q,QAAUP,EAAaQ,SAE1E,sCAGV,8BAAUpC,UAAU,eAEhB,yBAAKA,UAAU,aACX,4BAAKvB,KAAKiB,MAAMmT,SAASxR,QAG7B,yBAAKrB,UAAU,aACVvB,KAAKiB,MAAMmT,SAAS3R,aAGzB,yBAAKlB,UAAU,aACX,4BAAQA,UAAU,YAAY+I,aAAW,uBAAzC,WAAwEzC,EAAaoB,YAAYjJ,KAAKiB,MAAMmT,SAAS7R,eAArH,IAAsIvC,KAAKiB,MAAMmT,SAAS1R,iBAG9J,yBAAKnB,UAAU,aACX,4BAAQA,UAAU,YAAY+I,aAAW,uBAAzC,aAA0EtK,KAAKiB,MAAMmT,SAASzR,uBAGlG,yBAAKpB,UAAU,aACX,4BAAQA,UAAU,YAAY+I,aAAW,uBAAzC,WAAwEzC,EAAaoB,YAAYjJ,KAAKiB,MAAMmT,SAAS9R,gBAArH,IAAuItC,KAAKiB,MAAMmT,SAAS5R,kBAG/J,yBAAKjB,UAAU,aACX,4BAAQA,UAAU,YAAY+I,aAAW,uBAAzC,oBAAiFtK,KAAKiB,MAAMmT,SAASlL,wBAGzG,yBAAK3H,UAAU,aACX,4BAAQA,UAAU,YAAYK,MAAO,CAACgJ,SAAS,UAA/C,mBAAyE,2BAAI5K,KAAK6K,gBAIjF7K,KAAK8O,WAAc9O,KAAKkU,OAAUlU,KAAKiB,MAAM4K,IAE5C,qCADF,4BAAQtK,UAAU,8BAA8BO,QAAS9B,KAAKuU,UAA9D,gBAIJ,yBAAKhT,UAAU,kDAAkDyR,YAAW,IACxE,wBAAIzR,UAAU,gFACV,wBAAIK,MAAO,CAACiS,MAAM,SAEd7T,KAAKiB,MAAMmT,UAAYpU,KAAKiB,MAAMmT,SAAS7P,OAC3CvE,KAAKiB,MAAMmT,SAAS7P,OAAOuE,KAAI,SAACxI,GAAD,OAC3B,wBAAIyI,IAAKzI,EAAQ2D,IACb,yBAAK2P,IAAKtT,EAAQ2G,YAAarF,MAAO,CAACiS,MAAM,QAAQT,UAAU,eAEnE,sCAIZ,uBAAG7R,UAAU,4DAA4DuS,uBAAsB,GAAIC,iBAAgB,aACnH,uBAAGxS,UAAU,6DAA6DyS,mBAAkB,GAAID,iBAAgB,UAEpH,8BAEK/T,KAAKkU,OAASlU,KAAKiB,MAAM4K,IAC1B,oCAEQ7L,KAAKiB,MAAM4K,IAAInI,SAAWN,EAAWO,OACrC,4BAAQpC,UAAU,8BAA8BO,QAAS9B,KAAKwU,WAA9D,iBACExU,KAAKiB,MAAMqT,WAAa,qCAEzB,oCACG,4BAAQrQ,GAAG,YAAY1C,UAAU,8BAA8BO,QAAS9B,KAAKyO,WAA7E,sBAIV,qCAIFzO,KAAK2U,QACL,kBAAC,IAAD,CAAMlT,GAAE,qBAAgBzB,KAAK8P,SACzB,4BAAQvO,UAAU,+BAAlB,kBAGJ,qCAGJ,6BAEIvB,KAAKkU,MACL,kBAAC,EAAD,CAAY9V,MAAO4B,KAAKoI,MAAMhK,QAC5B,qCAEN,kBAAC,EAAD,CAAaiO,QAAS,cAAelI,QAASnE,KAAK8P,SACnD,kBAAC,EAAD,CAAa1R,MAAO4B,KAAKoI,MAAMhK,YAjRnD,mCA2DQ,IAAI6C,EAAYjB,KAAKiB,MAGrB,OAFsBA,EAAMmT,SAAN,eAAmC,IAClCnT,EAAMmT,SAAN,gBAAoC,KA7DnE,6BAkEQ,OAAOpU,KAAKoI,MAAMhK,MAAMoS,OAAOV,SAlEvC,4BAiKQ,OAAOpQ,EAASC,KAAKoC,aAAe/B,KAAKiB,MAAMmT,SAAStR,QAAUpD,EAASC,KAAKoC,YAAY0B,MAAQzD,KAAKiB,MAAMmT,SAAStR,SAjKhI,8BAqKQ,OAAO9C,KAAKkU,OAASlU,KAAKiB,MAAMmT,SAAS1Q,SAAWP,EAAaQ,SAAW3D,KAAK8O,YArKzF,gCAyKQ,OAAO9O,KAAKiB,MAAMC,QAAQ2K,KAAO7L,KAAKiB,MAAMC,QAAQmT,WAAarU,KAAKiB,MAAMC,QAAQkO,SAzK5F,GAAwCpQ,IAAMkD,WC9VjC0S,GAAb,WAII,aAAsB,oBAJ1B,8GAYmCC,GAZnC,0EAcY1S,EAAa2S,qBAAqBD,GAd9C,sBAekB,IAAIrR,MAAM,gBAf5B,UAiBY9D,EAASC,KAAKoC,YAjB1B,sBAkBkB,IAAIyB,MAAM,0BAlB5B,uBAoBc9D,EAASE,UAAUmE,WAAW,WAAWC,IAAzC,UAA6CtE,EAASC,KAAKoC,mBAA3D,aAA6C,EAA2B0B,KAAKS,IAAI2Q,GApB/F,kRAwBwBnV,EAASE,UAAUmE,WAAW,WAAWC,IAAzC,UAA6CtE,EAASC,KAAKoC,mBAA3D,aAA6C,EAA2B0B,KAAKiB,MAxBrG,YAwBYV,EAxBZ,QAyBea,OAzBf,yCA0BmBb,EAAIhB,QAAU,IA1BjC,gCA4Be,IA5Bf,kIASQ,OADAhD,KAAKe,UAAYf,KAAKe,UAAYf,KAAKe,UAAY,IAAI6T,EAChD5U,KAAKe,cATpB,KAAa6T,GAEM7T,e,EA8BJ6T,UAAf,SChCqBG,G,kDAMpB,WAAY3M,GAAa,IAAD,8BACvB,cAAMA,IALPnH,MAAa,CACZsI,UAAW,IAKX,EAAKE,SAAW,EAAKA,SAASjB,KAAd,gBAChB,EAAKkB,OAAS,EAAKA,OAAOlB,KAAZ,gBACd,EAAKyF,WAAa,EAAKA,WAAWzF,KAAhB,gBAJK,E,uDAObsG,GACV9O,KAAKiC,SAAS,CACb6M,gB,+BAKOnF,GACR,IAAM1F,EAAM0F,EAAMC,cAAeC,aAAa,aACxCC,EAAQH,EAAMC,cAAN,MACd5J,KAAKiC,UAAS,SAAUhB,GAEvB,OADAA,EAAMsI,UAAUtF,GAAM6F,EACf7I,O,6BAIF0I,GAAwB,IAAD,OAC7BA,EAAMI,iBACNrC,QAAQC,IAAI,CAAEqN,KAAMhV,KAAKiB,MAAMsI,YAC/BvJ,KAAKiO,YAAW,GAChB2G,GAAeK,yBAAyBjV,KAAKiB,MAAMsI,WACjDlI,MAAK,SAAC2B,GACN/E,OAAOiM,MAAM,uBACb,EAAK+D,YAAW,MAEhB3M,OAAO,SAAC6I,GACRlM,OAAOiM,MAAM,kCACb,EAAK+D,YAAW,Q,0CAUE,IAAD,OACnBjO,KAAKiO,YAAW,GAChBvO,EAASwV,mBAAkB,SAACvU,GACvBA,GACHiU,GACCO,wBACA9T,MAAK,SAAC2B,GACN,EAAKf,SAAS,CACbsH,UAAWvG,IAEZ,EAAKiL,YAAW,MAEhB3M,OAAM,SAAC6I,GACPlM,OAAOiM,MAAM,gDACb,EAAK+D,YAAW,W,+BAOnB,OACC,6BACC,0BAAMrM,MAAO,CAAEwI,QAAS,OAASC,SAAUrK,KAAK0J,QAC/C,0DACA,8BAAUnI,UAAU,eACnB,yBAAKA,UAAU,aACd,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,2BACA,yBAAK/I,UAAU,oBACd,2BAAOgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,QAAQV,MAAO9J,KAAKiB,MAAMsI,UAAX,MAA+BkB,KAAK,QAAQlJ,UAAU,eAGjH,yBAAKA,UAAU,aACd,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,yBACA,yBAAK/I,UAAU,oBACd,2BAAOgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,WAAWV,MAAO9J,KAAKiB,MAAMsI,UAAX,SAAkCkB,KAAK,QAAQlJ,UAAU,eAGvH,yBAAKA,UAAU,aACd,2BAAOA,UAAU,gBAAgB+I,aAAW,uBAA5C,SACA,yBAAK/I,UAAU,oBACd,2BAAOgJ,SAAUvK,KAAKyJ,SAAUe,YAAU,QAAQV,MAAO9J,KAAKiB,MAAMsI,UAAX,MAA+BkB,KAAK,QAAQlJ,UAAU,eAIjH,4BAAQA,UAAU,8BAA8BsN,SAAU7O,KAAKiB,MAAM6N,UAAWhE,KAAK,UAArF,2C,mCAhDJ,OAFsB9K,KAAKiB,MAAMsI,UAAX,eAAyC,IACxCvJ,KAAKiB,MAAMsI,UAAX,gBAA0C,O,GA9CrBvK,IAAMkD,WCC/BkT,G,kDAgCpB,WAAYhN,GAAa,IAAD,8BACvB,cAAMA,IA/BPnH,MAcI,CACHsI,UAAW,GACL+F,UAAW,CACPtK,WAAY,KACZC,WAAY,KACZC,MAAO,EACPoD,KAAM,GAEV+M,WAAY,CACRrQ,WAAY,KACZC,WAAY,KACZC,MAAO,EACPoD,KAAM,IAMhB,EAAK2F,WAAa,EAAKA,WAAWzF,KAAhB,gBAFK,E,uDAKbsG,GACV9O,KAAKiC,SAAS,CACb6M,gB,4EAeD,OACC,6BACC,oCACA,2CACA,kBAAC,EAAD,CAAa1Q,MAAO,CAACoS,OAAO,CAACpD,UAAUpN,KAAKsV,UAAW1H,WAAW,UAClE,6CACA,kBAAC,EAAD,CAAaxP,MAAO,CAACoS,OAAO,CAACpD,UAAUpN,KAAKsV,UAAW1H,WAAW,e,gCAdpE,OAFmB5N,KAAKoI,MACA,MAAR,qB,GA7CkCpJ,IAAMkD,WCe7CqT,GAAb,4MAEItU,MAEI,CACAc,YAAY,MALpB,kEAQwB,IAAD,OACfrC,EAASC,KAAKY,oBAAmB,SAACyC,GAC9B,EAAKf,UAAS,SAASuT,GAEnB,OADAA,EAAK,YAAkBxS,EAChBwS,UAZvB,+BAmBQ,OACI,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAMC,IAAI,aAAa/T,KAAK,oEAC5B,4BAAQiS,IAAI,kEACZ,4BAAQA,IAAI,yEAEhB,kBAAC,EAAD,MACA,6BACA,yBAAK3P,GAAG,WACJ,kBAAC,IAAD,CAAO0R,OAAK,EAACC,KAAMvX,EAAOC,QAASuX,UAAW9K,IAC9C,kBAAC,IAAD,CAAO4K,OAAK,EAACC,KAAMvX,EAAOQ,KAAMgX,UAAW1N,IAC3C,kBAAC,IAAD,CAAOwN,OAAK,EAACC,KAAMvX,EAAOE,QAASsX,UAAW3K,IAC9C,kBAAC,IAAD,CAAOyK,OAAK,EAACC,KAAMvX,EAAOG,SAAUqX,UAAWvM,IAC/C,kBAAC,IAAD,CAAOsM,KAAMvX,EAAOI,UAAWoX,UAAW1B,IAC1C,kBAAC,IAAD,CAAOyB,KAAMvX,EAAOK,UAAWmX,UAAWrE,IAC1C,kBAAC,IAAD,CAAOmE,OAAK,EAACC,KAAMvX,EAAOM,QAASkX,UAAWd,KAC9C,kBAAC,IAAD,CAAOa,KAAMvX,EAAOO,eAAgBiX,UAAWT,WApCnE,GAAmCpW,IAAMkD,WCdzC4T,IAASC,OACP,kBAAC,GAAD,MACAtJ,SAASC,eAAe,SzBmIpB,kBAAmBsJ,WACrBA,UAAUC,cAAcC,MACrB7U,MAAK,SAAA8U,GACJA,EAAaC,gBAEd9U,OAAM,SAAA+U,GACL3O,QAAQ2O,MAAMA,EAAMC,c","file":"static/js/main.94609f12.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const ROUTES = {\n    SIGN_UP : '/signup',\n    SIGN_IN : '/signin',\n    NEW_POST : '/newPost',\n    VIEW_POST : '/post/:postId',\n    EDIT_POST : '/edit/post/:postId',\n    PROFILE: '/profile',\n    PUBLIC_PROFILE: '/profile/:profileId',\n    HOME : '/',\n    ACCOUNT : '/account',\n    PASSWORD_FORGET : '/pw-forget',\n}\n","import React from 'react';\n \nconst FirebaseContext = React.createContext<any|null>(null);\n \nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport * as firebase from 'firebase';\n\nconst config = {\n\tapiKey: \"AIzaSyALX8Goj0Hgaxo200ixjfdqIMGwr52ZEZA\",\n\tauthDomain: \"venpecambiosmvp.firebaseapp.com\",\n\tdatabaseURL: \"https://venpecambiosmvp.firebaseio.com\",\n\tprojectId: \"venpecambiosmvp\",\n\tstorageBucket: \"venpecambiosmvp.appspot.com\",\n\tmessagingSenderId: \"998948186915\",\n\tappId: \"1:998948186915:web:c22b9b94701780290e3a96\"\n};\n\nexport class Firebase {\n\tauth: firebase.auth.Auth;\n\tfirestore: firebase.firestore.Firestore;\n\tstorage: firebase.storage.Storage;\n\n\tprivate static _instance: Firebase;\n\n\tprivate constructor() {\n\t\tapp.initializeApp(config);\n\t\tthis.auth = app.auth();\n\t\tthis.firestore = app.firestore();\n\t\tthis.storage = app.storage();\n\t}\n\n\tstatic get instance() {\n\t\tthis._instance = this._instance ? this._instance : new Firebase();\n\t\treturn this._instance;\n\t}\n\n\tcreateUserWithEmailAndPassword(email: string, password: string) {\n\t\treturn this.auth.createUserWithEmailAndPassword(email, password);\n\t}\n\n\tsignInWithEmailAndPassword(email: string, password: string) {\n\t\treturn this.auth.signInWithEmailAndPassword(email, password);\n\t}\n\n\t/**\n\t * @description Server Timestamp\n\t */\n\tget firestoreTimestamp(){\n\t\treturn firebase.firestore.FieldValue.serverTimestamp();\n\t}\n\n\tsignOut() {\n\t\tthis.auth.signOut();\n\t}\n\n\tlistenAuthChanges(element:(user:object | null)=>any){\n\t\tthis.auth.onAuthStateChanged(element);\n\t}\n\n\tasync waitForAuth(){\n\t\tawait new Promise((accept)=>{\n\t\t\tlet unsubscribe = this.auth.onAuthStateChanged(function(user){\n\t\t\t\taccept(user);\n\t\t\t\tunsubscribe();\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default Firebase.instance;","import FirebaseContext from './context';\nimport Firebase from './firebase';\n \nexport default Firebase;\n \nexport { FirebaseContext };","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { ROUTES } from '../../constants/routes';\nimport Firebase from '../../lib/Firebase';\n\n\nexport default class Navigation extends React.Component {\n\n    state: {\n        loading: boolean\n    } = {\n        loading: false\n    }\n\n\n    get username(){\n        return Firebase.auth.currentUser ? Firebase.auth.currentUser.displayName || Firebase.auth.currentUser.email : \"NOT LOGGED IN\";\n    }\n\n    get profile(){\n        return Firebase.auth.currentUser;\n    }\n\n    set loading(loading:boolean){\n        this.setState({\n            loading\n        });\n    }\n\n    get loading(){\n        return this.state.loading;\n    }\n\n    async load(){\n        this.loading = true;\n        await Firebase.waitForAuth();\n        this.loading = false;\n    }\n\n    componentDidMount(){\n        this.load()\n        .then(function(){\n\n        })\n        .catch(function(){\n\n        });\n    }\n\n\n    render(){\n        return (\n            <div>\n                {\n                    !this.loading ?\n                    <nav className=\"uk-navbar-container\" uk-navbar=\"mode: click\">\n                        <div className=\"uk-navbar-left\">\n\n                            <ul className=\"uk-navbar-nav\">\n                                <li>\n                                    <Link to={ROUTES.HOME}>Inicio</Link>\n                                </li>\n                                {\n                                    this.profile ? \n                                    <>\n                                        <li>\n                                            <Link to={ROUTES.NEW_POST}>Nueva Oferta</Link>\n                                        </li>\n                                        <li>\n                                            <Link to={ROUTES.PROFILE}>Perfil</Link>\n                                        </li>\n                                    </> : <></>\n                                }\n                                <li>\n                                    <a href=\"#\">Autorización</a>\n                                    <div className=\"uk-navbar-dropdown\">\n                                        <ul className=\"uk-nav uk-navbar-dropdown-nav\">\n                                            {\n                                                this.profile ? \n                                                <li style={{cursor:'pointer'}} onClick={()=>Firebase.auth.signOut()}>\n                                                    <a>Salir</a>\n                                                </li> :\n                                                <>\n                                                    <li>\n                                                        <Link to={ROUTES.SIGN_UP}>Crear Cuenta</Link>\n                                                    </li>\n                                                    <li>\n                                                        <Link to={ROUTES.SIGN_IN}>Log In</Link>\n                                                    </li>\n                                                </>\n                                            }\n                                        </ul>\n                                    </div>\n                                </li>\n                            </ul>\n\n                        </div>\n                    </nav>\n                    :<></>\n                }\n            </div>\n        )\n    }\n}","import { IOffer } from \"./interface/Offer\";\nimport { IBidCreationPayload } from \"./interface/Bid\";\nimport { IContactUpdatePayload } from \"./interface/Contact\";\n\nexport class CheckManager {\n    private static _instance:CheckManager;\n    private constructor(){}\n\n    public static get Instance(){\n        this._instance = this._instance ? this._instance : new CheckManager();\n        return this._instance;\n    }\n\n\n    hasValidOfferCreationPayload(payload:IOffer){\n        if(isNaN(payload.accept_ammount) || payload.accept_ammount <= 0){\n            return false;\n        }\n\n        if(isNaN(payload.offer_ammount) || payload.accept_ammount <= 0){\n            return false;\n        }\n\n        if(!payload.accept_currency || !payload.description || !payload.offer_currency || !payload.offer_payment_method || !payload.title){\n            return false;\n        }\n\n        if(payload.description.length > 300 || payload.title.length > 30){\n            return false;\n        }\n        return true;\n    }\n\n\n    hasValidBidData(payload:IBidCreationPayload){\n        if(!payload.poster){\n            return false;\n        }\n        if(!payload.offer){\n            return false;\n        }\n        return true;\n    }\n\n    hasValidContactUData(data:IContactUpdatePayload){\n        if(data.email){\n            if(data.email.length > 30 || data.email.length < 5){\n                return false;\n            }\n        }\n        if(data.whatsapp){\n            if(data.whatsapp.length > 10 || data.whatsapp.length < 5){\n                return false;\n            }\n        }\n        if(data.phone){\n            if(data.phone.length > 10 || data.phone.length < 5){\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport default CheckManager.Instance;","export enum OFFER_STATUS {\n    ACTIVE = 1,\n    TAKEN = 2,\n    CLOSED = 3\n}\n\nexport enum BID_STATUS {\n    ACTIVE = 1,\n    ACCEPTED = 2,\n    REJECTED = 3,\n    CANCELLED = 4\n}","import { IOffer } from \"./interface/Offer\";\nimport { CheckManager } from \"./Checker\";\nimport Firebase from \"./Firebase/firebase\";\nimport { OFFER_STATUS } from \"../constants/status\";\nimport { IImage } from \"./interface/Media\";\n\nexport class OfferManager{\n\n    private static _instance: OfferManager;\n\n    private constructor(){\n\n    }\n\n    public static get Instance(){\n        this._instance = this._instance ? this._instance : new OfferManager();\n        return this._instance;\n    }\n\n\n    async createOffer(payload: IOffer){\n        if(!CheckManager.Instance.hasValidOfferCreationPayload(payload)){\n            throw new Error(\"Invalid data\");\n        }\n\n        if(!Firebase.auth.currentUser){\n            throw new Error(\"In order to create an offer, the user must be logged-in\");\n        }\n\n        payload.poster = Firebase.auth.currentUser.uid;\n        payload.status = OFFER_STATUS.ACTIVE;\n        payload.createdAt = Firebase.firestoreTimestamp;\n        \n        let resultingID = Firebase.firestore.collection('offers').doc().id;\n        await Firebase.firestore.collection('offers').doc(resultingID).set(payload);\n        return resultingID;\n    }\n\n    async updateOffer(payload: IOffer, offerId:string){\n        payload = JSON.parse(JSON.stringify(payload));\n        if(!CheckManager.Instance.hasValidOfferCreationPayload(payload)){\n            throw new Error(\"Invalid data\");\n        }\n\n        if(!Firebase.auth.currentUser){\n            throw new Error(\"In order to create an offer, the user must be logged-in\");\n        }\n\n        payload.poster = Firebase.auth.currentUser.uid;\n\n        //Note: Can't update status.\n        if(payload.images){ //Images go separately\n            delete payload.images;\n        }\n        if(payload.status){ //We don't update status\n            delete payload.status;\n        }\n        if(payload.createdAt){ //We don't update status\n            delete payload.createdAt;\n        }\n        \n        await Firebase.firestore.collection('offers').doc(offerId).update(payload);\n    }\n\n    async fetchOffer(offerId:string, avoidImages?:boolean){\n        let result = await Firebase.firestore.collection('offers').doc(offerId).get();\n        let returnData = result.exists ? result.data() : null;\n        if(returnData && !avoidImages){\n            returnData.images = await this.getImages(offerId);\n        }\n        return returnData;\n    }\n\n    async fetchOffers(includeImages?:boolean, startAfter?:Date, stopBefore?:Date, limit?:number){\n        let query = Firebase.firestore.collection('offers')\n        .where(\"status\", \"==\", OFFER_STATUS.ACTIVE);\n        query = <any>query.orderBy('createdAt', 'desc');\n        if(startAfter){\n            query = <any>query.startAfter(startAfter);\n            if(limit){\n                query = <any>query.limit(limit);\n            }\n        }else if(stopBefore){\n            query = <any>query.endBefore(stopBefore);\n            if(limit){\n                query = <any>query.limitToLast(limit);\n            }\n        }else{\n            if(limit){\n                query = <any>query.limit(limit);\n            }\n        }\n        let offers = await query.get();\n        let offersToReturn:IOffer[] = [];\n        for(let offerI = 0; offerI < offers.docs.length; offerI++){\n            let offerEl = offers.docs[offerI];\n            let offer:IOffer = <IOffer>offerEl.data();\n            offer.createdAt = offer.createdAt ? offer.createdAt.toDate() : null;\n            offer.id = offerEl.id;\n            if(includeImages){\n                offer.images = await this.getImages(offer.id);\n            }\n            offersToReturn.push(offer);\n        }\n        return offersToReturn;\n    }\n\n    async getImages(offerId:string){\n        let images = await Firebase.firestore.collection(`offers/${offerId}/image`).get();\n        let imageFiles:IImage[] = [];\n        images.docs.forEach((data)=>{\n            let imgData = <any>data.data();\n            imgData.id = data.id;\n            imageFiles.push(imgData);\n        })\n        return imageFiles;\n    }\n\n    async removeImage(offerId:string, image:IImage){\n        if(!offerId || !image){\n            throw new Error(\"Offer and Image ID's must be defined\");\n        }\n        await Firebase.storage.ref(image.ref).delete();\n        await Firebase.firestore.doc(`offers/${offerId}/image/${image.id}`).delete();\n    }\n\n    async uploadImage(offerId:string, imageFile:File){\n        let ext = imageFile.name.split(\".\").pop();\n        let allowedExt = [\"jpg\", \"png\"];\n        if(allowedExt.indexOf(ext || \"\") < 0){\n            throw new Error(\"Invalid file image\");\n        }\n        let imageDoc = Firebase.firestore.collection(`offers/${offerId}/image`).doc();\n        let filePath = `offers/${offerId}/image/${imageDoc.id}.${ext}`;\n        let imageRef = await Firebase.storage.ref(filePath).put(imageFile);\n        let downloadUrl = await imageRef.ref.getDownloadURL();\n        await imageDoc.set({\n            downloadURL: downloadUrl,\n            bytes: imageRef.totalBytes,\n            ref: filePath\n        });\n        return imageDoc;\n    }\n\n    private async _updateOfferStatus(offerId:string, offerStatus:OFFER_STATUS){\n        await Firebase.firestore.collection(\"offers\").doc(offerId).update({\n            status: offerStatus\n        });\n    }\n\n    async closeOffer(offerId:string){\n        let offer:IOffer = <any>await this.fetchOffer(offerId, true);\n        if(offer.status === OFFER_STATUS.ACTIVE){\n            await this._updateOfferStatus(offerId, OFFER_STATUS.CLOSED);\n        }else{\n            throw new Error(\"Only active-status offers can be updated\");\n        }\n    }\n\n    async getOffer(offerId:string){\n        const offerDoc = await Firebase.firestore.collection('offers').doc(offerId).get();\n        return <IOffer>{...offerDoc.data(), id: offerDoc.id};\n    }\n\n    getOfferStatus(offerStatus:OFFER_STATUS){\n\n        if(!offerStatus){\n            return \"\";\n        }\n        switch (offerStatus) {\n            case OFFER_STATUS.ACTIVE:\n                return \"ACTIVE\";\n            case OFFER_STATUS.CLOSED:\n                return \"CLOSED\";\n            case OFFER_STATUS.TAKEN:\n                return \"TAKEN\";\n            default:\n                return `UNKNOWN (${offerStatus})`;\n        }\n    }\n\n    testAssumption(){\n        console.log((<any>Firebase.firestore).fieldValue);\n    }\n}\n\nexport default OfferManager.Instance;","import numeral from 'numeral';\n\nexport class UtilsManager {\n    private static _instance: UtilsManager;\n    private constructor(){}\n    static get Instance(){\n        this._instance = this._instance ? this._instance : new UtilsManager();\n        return this._instance;\n    }\n\n\n    getDate(date:Date){\n        return date ? date.toLocaleString() : null;\n    }\n\n    getCurrency(ammount:number){\n        return numeral(ammount).format(\"0,0\")\n    }\n}\n\nexport default UtilsManager.Instance;","import React from 'react';\nimport { IOffer } from '../../lib/interface/Offer';\nimport { Link } from 'react-router-dom';\nimport { ROUTES } from '../../constants/routes';\nimport OfferManager from '../../lib/Offer';\nimport UtilsManager from '../../lib/Utils';\n\n\nexport default class HomeComponent extends React.Component {\n\n    state:{\n        offers:IOffer[],\n        offersPaging: {\n            startAfter:IOffer | null,\n            stopBefore:IOffer | null,\n            limit: number,\n            page: number\n        }\n    } = {\n        offers:[],\n        offersPaging: {\n            startAfter:null,\n            stopBefore:null,\n            limit: 5,\n            page: 0\n        }\n    };\n\n    constructor(props:any){\n        super(props);\n        this.loadOffers = this.loadOffers.bind(this);\n        this.pageBack = this.pageBack.bind(this);\n        this.pageForth = this.pageForth.bind(this);\n    }\n\n    async loadOffers(){\n        try{\n            let {startAfter, stopBefore, limit} = this.state.offersPaging;\n            console.log({\n                startAfter: startAfter?.createdAt, stopBefore: stopBefore?.createdAt, limit,\n                page: this.state.offersPaging.page\n            });\n            let offers = await OfferManager.fetchOffers(false, startAfter?.createdAt, stopBefore?.createdAt, limit);\n            this.setState(function(state:any){\n                state['offers'] = offers;\n                state['offersPaging'].startAfter = offers[0];\n                state['offersPaging'].stopBefore = offers[offers.length-1];\n                return state;\n            });\n        }catch(e){\n            console.log({e});\n            console.log(\"Error loading offers...\");\n        }\n    }\n\n    componentDidMount(){\n        this.loadOffers();\n    }\n\n    pageBack(){\n        if(this.state.offersPaging.page > 0){\n            this.setState(function(oldState:any){\n                oldState['offersPaging'].stopBefore = oldState['offersPaging'].startAfter;\n                oldState['offersPaging'].startAfter = null;\n                oldState['offersPaging'].page-=1;\n                return oldState;\n            }, ()=>{\n                this.loadOffers();\n            });\n        }\n    }\n\n    pageForth(){\n        if(this.state.offers.length >= this.state.offersPaging.limit){\n            this.setState(function(oldState:any){\n                oldState['offersPaging'].startAfter = oldState['offersPaging'].stopBefore;\n                oldState['offersPaging'].stopBefore = null;\n                oldState['offersPaging'].page+=1;\n                return oldState;\n            }, ()=>{\n                this.loadOffers();\n            });\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <h3>Inicio</h3>\n                <table className=\"uk-table\">\n                    <thead>\n                        <tr>\n                            <th>Fecha</th>\n                            <th>Ofrece</th>\n                            <th>Ofrece Pago</th>\n                            <th>Acepta</th>\n                            <th>Acepta Pago</th>\n                            <th>Acciones</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.offers.map((element:IOffer) => \n                                <tr key={element.id}>\n                                    <td>{UtilsManager.getDate(element.createdAt)}</td>\n                                    <td>{UtilsManager.getCurrency(element.offer_ammount)}{element.offer_currency}</td>\n                                    <td>{element.offer_payment_method}</td>\n                                    <td>{UtilsManager.getCurrency(element.accept_ammount)}{element.accept_currency}</td>\n                                    <td>{element.accept_payment_method}</td>\n                                    <td>\n                                        <Link to={ROUTES.VIEW_POST.replace(\":postId\", element.id+\"\")}>\n                                            <button className=\"uk-button uk-button-default\">Info</button>\n                                        </Link>\n                                        <Link to={ROUTES.PUBLIC_PROFILE.replace(':profileId', element.poster+\"\")}>\n                                            <button className=\"uk-button uk-button-default\">Poster</button>\n                                        </Link>\n                                    </td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colSpan={3} style={{\n                                textAlign:'left'\n                            }}>\n                                <button className='uk-button' onClick={this.pageBack}>Atrás</button>\n                            </td>\n                            <td colSpan={2} style={{\n                                textAlign:'right'\n                            }}>\n                                <button className='uk-button' onClick={this.pageForth}>Siguiente</button>\n                            </td>\n                        </tr>\n                    </tfoot>\n                </table>\n                \n            </div>\n        )\n    }\n}","import React, { SyntheticEvent } from 'react';\nimport OfferManager from '../../lib/Offer';\nimport { IOffer } from '../../lib/interface/Offer';\nimport Firebase from '../../lib/Firebase';\nimport { Redirect } from 'react-router-dom';\n\nexport default class NewPostComponent extends React.Component {\n\n    state:any = {\n        formValue:{},\n        redirectHome: false\n    };\n\n    constructor(props:any){\n        super(props);\n        this.setValue = this.setValue.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n\n    setValue(event:any){\n        const id = (event.currentTarget).getAttribute('custom-id');\n        const value = event.currentTarget['value'];\n        this.setState(function(state:any){\n            state.formValue[id] = value;\n            return state;\n        });\n    }\n\n    submit(event:SyntheticEvent){\n        event.preventDefault();\n        OfferManager.createOffer(this.state.formValue)\n        .then((resultingId)=>{\n            console.log(\"Created offer ID:\",resultingId);\n            window.alert(\"Se ha creado su oferta de manera satisfactoria!\");\n            this.setState({\n                redirectHome: true\n            });\n        })\n        .catch(function(err){\n            console.log(\"Error creating offer: \",err);\n        })\n    }\n\n    get exchangeRate(){\n        let offeringAmmount = this.state.formValue['offer_ammount'] || 1;\n        let acceptingAmmount = this.state.formValue['accept_ammount'] || 1;\n        return offeringAmmount / acceptingAmmount;\n    }\n\n    componentDidMount(){\n        /**\n         *      \n        */\n    }\n\n    render(){\n        if(this.state.redirectHome){\n            return <Redirect to=\"/\"/>\n        }\n        return (\n            <div>\n                <form style={{padding:'2em'}} onSubmit={this.submit}>\n                    <h3>Nueva Oferta</h3>\n                    <fieldset className=\"uk-fieldset\">\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Título</label>\n                            <div className=\"uk-form-controls\">\n                                <input onChange={this.setValue} custom-id='title' className=\"uk-input\" type=\"text\" placeholder=\"Title\"/>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Descripción de La Oferta</label>\n                            <div className=\"uk-form-controls\">\n                                <textarea onChange={this.setValue} custom-id='description' className=\"uk-textarea\" maxLength={300}></textarea>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Moneda de Oferta</label>\n                            <div className=\"uk-form-controls\">\n                                <select className=\"uk-select\" id=\"form-stacked-select\" onChange={this.setValue} custom-id='offer_currency'>\n                                    <option>Selecciona tu Moneda</option>\n                                    <option value=\"USD\">USD</option>\n                                    <option value=\"BSF\">BSF</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Cantidad de Oferta</label>\n                            <div className=\"uk-form-controls\">\n                                <input onChange={this.setValue} custom-id=\"offer_ammount\" type=\"number\" className=\"uk-input\"></input>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Método de Pago Aceptado</label>\n                            <div className=\"uk-form-controls\">\n                                <select onChange={this.setValue} custom-id=\"offer_payment_method\" className=\"uk-select\" id=\"form-stacked-select\">\n                                    <option>Selecciona el Método de Pago para tu oferta</option>\n                                    <option value=\"transferencia\">Transferencia</option>\n                                    <option value=\"efectivo\">Efectivo</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Moneda Aceptada como Pago</label>\n                            <div className=\"uk-form-controls\">\n                                <select onChange={this.setValue} custom-id=\"accept_currency\" className=\"uk-select\" id=\"form-stacked-select\">\n                                    <option>Selecciona tu Moneda</option>\n                                    <option value=\"USD\">USD</option>\n                                    <option value=\"BSF\">BSF</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Cantidad de Moneda Aceptada</label>\n                            <div className=\"uk-form-controls\">\n                                <input onChange={this.setValue} custom-id=\"accept_ammount\" type=\"number\" className=\"uk-input\"></input>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Método de Pago Aceptado</label>\n                            <div className=\"uk-form-controls\">\n                                <select onChange={this.setValue} custom-id=\"accept_payment_method\" className=\"uk-select\" id=\"form-stacked-select\">\n                                    <option>Selecciona tu Método de Pago Aceptado</option>\n                                    <option value=\"transferencia\">Transferencia</option>\n                                    <option value=\"efectivo\">Efectivo</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <legend className=\"uk-legend\" style={{fontSize:'1.2em'}}>Tasa de Cambio: <b>{this.exchangeRate}</b></legend>\n                        </div>\n\n                        <button className=\"uk-button uk-button-primary\" role=\"submit\">Crear Nueva Oferta</button>\n                    </fieldset>\n                </form>\n\n            </div>\n        );\n    }\n}","import React, { SyntheticEvent } from 'react';\nimport FirebaseInstance, { Firebase } from '../../lib/Firebase/firebase';\nimport { Redirect } from 'react-router-dom';\n\nexport class SignUpComponent extends React.Component<{firebase:Firebase}> {\n\n    state:any = {\n        formValue:{},\n        redirect: false\n    };\n\n    constructor(props:any){\n        super(props);\n        this.setValue = this.setValue.bind(this);\n        this.submit = this.submit.bind(this);\n        this.load = this.load.bind(this);\n    }\n\n\n    setValue(event:any){\n        const id = (event.currentTarget).getAttribute('custom-id');\n        const value = event.currentTarget['value'];\n        this.setState(function(state:any){\n            state.formValue[id] = value;\n            return state;\n        });\n    }\n\n    submit(event:SyntheticEvent){\n        event.preventDefault();\n        if(this.state.formValue['password'] === this.state.formValue['password']){\n            FirebaseInstance.createUserWithEmailAndPassword(this.state.formValue['email'], this.state.formValue['password'])\n            .then((data)=>{\n                window.alert(\"Su cuenta ha sido creada satisfactoriamente.\");\n                this.setState({\n                    redirect: true\n                });\n            })\n            .catch(function(err){\n                window.alert(\"Hubo un error creando tu cuenta. Por favor, verifique sus datos e intente nuevamente.\");\n            })\n        }\n    }\n\n    async load(){\n        await FirebaseInstance.waitForAuth();\n        if(FirebaseInstance.auth.currentUser){\n            this.setState({\n                redirect: true\n            });\n        }\n    }\n\n    componentDidMount(){\n        this.load();\n    }\n\n    render(){\n        if(this.state.redirect){\n            return (\n                <Redirect to=\"/\"/>\n            );\n        }\n        return (\n            <div>\n                <form style={{padding:'2em'}} onSubmit={this.submit}>\n                    <h3>Registrarte</h3>\n                    <fieldset className=\"uk-fieldset\">\n\n                        <legend className=\"uk-legend\" style={{fontSize:'1.2em'}}>Email</legend>\n\n                        <div className=\"uk-margin\">\n                            <input onChange={this.setValue} custom-id='email' className=\"uk-input\" type=\"email\" placeholder=\"Email\"/>\n                        </div>\n\n                        <legend className=\"uk-legend\" style={{fontSize:'1.2em'}}>Contraseña</legend>\n\n                        <div className=\"uk-margin\">\n                            <input onChange={this.setValue} custom-id='password' className=\"uk-input\" type=\"password\" placeholder=\"Password\"/>\n                        </div>\n\n                        <legend className=\"uk-legend\" style={{fontSize:'1.2em'}}>Repetir Contraseña</legend>\n\n                        <div className=\"uk-margin\">\n                            <input onChange={this.setValue} custom-id='repeat-password' className=\"uk-input\" type=\"password\" placeholder=\"Confirm\"/>\n                        </div>\n\n                        <button className=\"uk-button uk-button-primary\" role=\"submit\">Crear Cuenta</button>\n\n                    </fieldset>\n                </form>\n\n            </div>\n        );\n    }\n}","import React, { SyntheticEvent } from 'react';\nimport FirebaseInstance, { Firebase } from '../../lib/Firebase/firebase';\n\nexport class SignInComponent extends React.Component<{firebase:Firebase}> {\n\n    state:any = {\n        formValue:{}\n    };\n\n    constructor(props:any){\n        super(props);\n        this.setValue = this.setValue.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n\n    setValue(event:any){\n        const id = (event.currentTarget).getAttribute('custom-id');\n        const value = event.currentTarget['value'];\n        this.setState(function(state:any){\n            state.formValue[id] = value;\n            return state;\n        });\n    }\n\n    submit(event:SyntheticEvent){\n        event.preventDefault();\n        FirebaseInstance.signInWithEmailAndPassword(this.state.formValue['email'], this.state.formValue['password'])\n        .then(function(data){\n            console.log(\"Data\");\n        })\n        .catch(function(err){\n            window.alert(\"Error\");\n        })\n    }\n\n    componentDidMount(){\n        \n    }\n\n    render(){\n        return (\n            <div>\n                <form style={{padding:'2em'}} onSubmit={this.submit}>\n                    <h3>Sign In</h3>\n                    <fieldset className=\"uk-fieldset\">\n\n                        <legend className=\"uk-legend\" style={{fontSize:'1.2em'}}>Email</legend>\n\n                        <div className=\"uk-margin\">\n                            <input onChange={this.setValue} custom-id='email' className=\"uk-input\" type=\"email\" placeholder=\"Email\"/>\n                        </div>\n\n                        <legend className=\"uk-legend\" style={{fontSize:'1.2em'}}>Password</legend>\n\n                        <div className=\"uk-margin\">\n                            <input onChange={this.setValue} custom-id='password' className=\"uk-input\" type=\"password\" placeholder=\"Password\"/>\n                        </div>\n\n                        <button className=\"uk-button uk-button-primary\" role=\"submit\">Sign In</button>\n\n                    </fieldset>\n                </form>\n\n            </div>\n        );\n    }\n}","import { IOffer } from \"./interface/Offer\";\nimport CheckManager from \"./Checker\";\nimport Firebase from \"./Firebase/firebase\";\nimport { OFFER_STATUS, BID_STATUS } from \"../constants/status\";\nimport { IBidCreationPayload } from \"./interface/Bid\";\nimport { IContactUpdatePayload } from \"./interface/Contact\";\n\nexport class BidManager {\n\n    private static _instance: BidManager ;\n\n    private constructor(){\n\n    }\n\n    public static get Instance(){\n        this._instance = this._instance ? this._instance : new BidManager ();\n        return this._instance;\n    }\n\n\n    async createBid(bidData:IBidCreationPayload){\n        let newBidId = Firebase.firestore.collection('bid').doc().id;\n        if(!Firebase.auth.currentUser){\n            throw new Error(\"User must be logged in to enable this action\");\n        }\n        bidData.poster = Firebase.auth.currentUser.uid\n        if(!CheckManager.hasValidBidData(bidData)){\n            throw new Error(\"Invalid bid data\");\n        }\n        let existing = await Firebase.firestore.collection('bid')\n        .where('poster', '==', bidData.poster)\n        .where('offer', '==', bidData.offer)\n        .get();\n        if(existing.size > 0){\n            throw new Error(\"Can't bid two times on the same offer\");\n        }\n\n        bidData.status = BID_STATUS.ACTIVE;\n        bidData.createdAt = Firebase.firestoreTimestamp;\n        await Firebase.firestore.collection(\"bid\").doc(newBidId).set(bidData);\n        return newBidId;\n    }\n\n    async hasBid(offerId:string){\n        if(!Firebase.auth.currentUser){\n            return false;\n        }\n        let res = await this.getBids(offerId);\n        return res.size > 0;\n    }\n\n    async getBidContact(userId:string):Promise<IContactUpdatePayload>{\n        let doc = await Firebase.firestore.collection('contact').doc(userId).get();\n        return <any>doc.data();\n    }\n\n    async getBid(bidId:string):Promise<IBidCreationPayload>{\n        let bidDoc = await Firebase.firestore.collection('bid').doc(bidId).get();\n        let bid:IBidCreationPayload = {...<any>bidDoc.data(), id: bidDoc.id};\n        return bid;\n    }\n\n    //Get the bids from an offer and an user\n    async getBids(offerId:string):Promise<firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>>{\n        if(!Firebase.auth.currentUser){\n            throw new Error('No puedes obtener tus pujas si no has accedido a tu cuenta')\n        }\n        let existing = await Firebase.firestore.collection('bid')\n        .where('poster', '==', Firebase.auth.currentUser.uid)\n        .where(\"offer\", \"==\", offerId)\n        .get();\n        return existing;\n    }\n\n    async getGeneralBids(offerId:string):Promise<firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>>{\n        let existing = await Firebase.firestore.collection('bid')\n        .where(\"offer\", \"==\", offerId)\n        .get();\n        return existing;\n    }\n\n    async fetchGeneralBids(offerId:string, startAfter?:Date, stopBefore?:Date, limit?:number){\n        let query = Firebase.firestore.collection('bid')\n        .where(\"offer\", \"==\", offerId);\n\n        query = <any>query.orderBy('createdAt', 'asc');\n        if(startAfter){\n            query = <any>query.startAfter(startAfter);\n            if(limit){\n                query = <any>query.limit(limit);\n            }\n        }else if(stopBefore){\n            query = <any>query.endBefore(stopBefore);\n            if(limit){\n                query = <any>query.limitToLast(limit);\n            }\n        }else{\n            if(limit){\n                query = <any>query.limit(limit);\n            }\n        }\n        let offers = await query.get();\n        let offersToReturn:IBidCreationPayload[] = [];\n        \n        offers.docs.forEach((offerEl)=>{\n            let offer:IBidCreationPayload = <IBidCreationPayload>offerEl.data();\n            offer.createdAt = offer.createdAt.toDate();\n            offer.id = offerEl.id;\n            offersToReturn.push(offer);\n        });\n\n        return offersToReturn;\n    }\n\n    async hasGeneralBids(offerId:string):Promise<boolean>{\n        let existing = await Firebase.firestore.collection('bid')\n        .where(\"offer\", \"==\", offerId)\n        .limit(1)\n        .get();\n        return !existing.empty;\n    }\n\n    async cancelBid(offerId:string){\n        let bids = await this.getBids(offerId);\n        if(bids.size>0){\n            for(const bid of bids.docs){\n                try{\n                    await bid.ref.update({\n                        status: BID_STATUS.CANCELLED\n                    })\n                }catch(e){}\n            }\n        }\n    }\n\n    async acceptBid(bidId:string){\n        try{\n            await Firebase.firestore.doc(`bid/${bidId}`).update({\n                status: BID_STATUS.ACCEPTED\n            });\n        }catch(e){\n            throw new Error(\"Error aceptado la puja\");\n        }\n    }\n\n    async rejectBid(bidId:string){\n        try{\n            await Firebase.firestore.doc(`bid/${bidId}`).update({\n                status: BID_STATUS.REJECTED\n            });\n        }catch(e){\n            throw new Error(\"Error rechazando la puja\");\n        }\n    }\n\n\n}\n\nexport default BidManager .Instance;","declare const UIkit:any;\nexport class UIKitManager {\n    private static _instance: UIKitManager;\n    public static get Instance(){\n        this._instance = this._instance ? this._instance : new UIKitManager();\n        return this._instance;\n    }\n    private constructor(){\n\n    }\n\n    showModal(modalId:string, options?:any){\n        UIkit.modal(document.getElementById(modalId)).show(options ? options : {});\n    }\n\n    hideModal(modalId:string, options?:any){\n        UIkit.modal(document.getElementById(modalId)).hide(options ? options : {});\n    }\n\n    \n}\n\nexport default UIKitManager.Instance;","import { IOfferRating } from \"./interface/Offer\";\nimport Firebase from \"./Firebase\";\nimport { IBidRating } from \"./interface/Bid\";\nimport BidManager from \"./Bid\";\nimport OfferManager from \"./Offer\";\n\nexport class RateManager {\n    private static _instance:RateManager;\n    private constructor(){}\n\n    public static get Instance(){\n        this._instance = this._instance ? this._instance : new RateManager();\n        return this._instance;\n    }\n\n    async rateBid(comment:string, rate:string, bidId:string){\n        if(!Firebase.auth.currentUser){\n            throw new Error(\"User must be logged in to rate\");\n        }\n        if(!comment || !rate || !bidId){\n            throw new Error(\"Invalid data for offer\");\n        }\n        let bidPoster = await BidManager.getBid(bidId);\n        let offerCreationPayload:IBidRating = {\n            comment, rate: parseInt(rate), bidId, poster: Firebase.auth.currentUser?.uid,\n            ratedUser: bidPoster.poster+\"\",\n            createdAt: Firebase.firestoreTimestamp,\n            offerId: null\n        };\n        let existing = await this.hasRateOnBid(bidId);\n        if(existing){\n           throw new Error(\"Can't add more than one review for a bid.\"); \n        }\n        let rating = await Firebase.firestore.collection(`rating`).add(offerCreationPayload);\n        return rating.id;\n\n    }\n\n    async rateOffer(comment:string, rate:string, offerId:string){\n        if(!Firebase.auth.currentUser){\n            throw new Error(\"User must be logged in to rate\");\n        }\n        if(!comment || !rate || !offerId){\n            throw new Error(\"Invalid data for offer\");\n        }\n        let offer = await OfferManager.getOffer(offerId);\n        let offerCreationPayload:IOfferRating = {\n            comment, rate: parseInt(rate), offerId, poster: Firebase.auth.currentUser?.uid,\n            ratedUser: offer.poster+\"\",\n            createdAt: Firebase.firestoreTimestamp,\n            bidId: null\n        };\n        let existing = await this.hasRateOnOffer(offerId);\n        if(existing){\n           throw new Error(\"Can't add more than one review for an offer.\"); \n        }\n        let rating = await Firebase.firestore.collection(`rating`).add(offerCreationPayload);\n        return rating.id;\n    }\n\n    async hasRateOnOffer(offerId:string){\n        if(!Firebase.auth.currentUser){\n            return false;\n        }\n        let existing = await Firebase.firestore.collection(`rating`)\n        .where(\"poster\", \"==\", Firebase.auth.currentUser.uid)\n        .where(\"offerId\", \"==\", offerId)\n        .limit(1).get();\n        return !existing.empty;\n    }\n\n    async fetchOfferRatings(offerId:string, startAfter?:Date, stopBefore?:Date, limit?:number, fromUser?:string){\n\n        let query = Firebase.firestore.collection('rating')\n        .where(\"offerId\", \"==\", offerId);\n\n        query = <any>query.orderBy('createdAt', 'asc');\n        if(startAfter){\n            query = <any>query.startAfter(startAfter);\n            if(limit){\n                query = <any>query.limit(limit);\n            }\n        }else if(stopBefore){\n            query = <any>query.endBefore(stopBefore);\n            if(limit){\n                query = <any>query.limitToLast(limit);\n            }\n        }else{\n            if(limit){\n                query = <any>query.limit(limit);\n            }\n        }\n        let offers = await query.get();\n        let offersToReturn:IOfferRating[] = offers.docs.map(ratingEl => {\n            let offer:IOfferRating = <IOfferRating>ratingEl.data();\n            offer.createdAt = offer.createdAt.toDate();\n            offer.id = ratingEl.id;\n            return offer;\n        });\n        return offersToReturn;\n    }\n\n    /**\n     * \n     * @param ratedUser The user that was rated by this rating\n     * @param ratingType Either offer or bid\n     * @param startAfter A date in time to start counting\n     * @param stopBefore A date in time to stop counting\n     * @param limit The limit of the records to get\n     */\n    async fetchUserRatings(ratedUser:string, ratingType:'offer'|'bid', startAfter?:Date, stopBefore?:Date, limit?:number){\n        let query = Firebase.firestore\n            .collection('rating')\n            .where(\"ratedUser\", \"==\", ratedUser);\n\n        if(ratingType === 'offer'){\n            query = query.where('bidId', '==', null);\n        }else if(ratingType === 'bid'){\n            query = query.where('offerId', '==', null);\n        }\n\n        query = <any>query.orderBy('createdAt', 'asc');\n        if(startAfter){\n            query = <any>query.startAfter(startAfter);\n            if(limit){\n                query = <any>query.limit(limit);\n            }\n        }else if(stopBefore){\n            query = <any>query.endBefore(stopBefore);\n            if(limit){\n                query = <any>query.limitToLast(limit);\n            }\n        }else{\n            if(limit){\n                query = <any>query.limit(limit);\n            }\n        }\n        let offers = await query.get();\n        return <IOfferRating[]> offers.docs.map(ratingEl => {\n            let offer:IOfferRating = <IOfferRating>ratingEl.data();\n            offer.createdAt = offer.createdAt.toDate();\n            offer.id = ratingEl.id;\n            return offer;\n        });\n    }\n\n    async hasRateOnBid(bidId:string){\n        if(!Firebase.auth.currentUser){\n            return false;\n        }\n        let existing = await Firebase.firestore.collection(`rating`)\n        .where(\"poster\", \"==\", Firebase.auth.currentUser.uid)\n        .where(\"bidId\", \"==\", bidId)\n        .limit(1).get();\n        return !existing.empty;\n    }\n\n}\n\nexport default RateManager.Instance;","import React, { SyntheticEvent } from 'react';\nimport RateManager from '../../lib/Rate';\nimport UIKitManager from '../../lib/UIKit';\n\ndeclare const UIkit:any;\nexport default class RateSnippet extends React.Component<{modalId:string, bidId?:string, offerId?:string}> {\n\n    state:{\n        formValue:{\n            rate: string,\n            comment: string\n        },\n        loading:any\n    } = {\n        formValue:{\n            rate: \"0\",\n            comment: \"\"\n        },\n        loading: {\n            saving: false\n        }\n    };\n\n    constructor(props:any){\n        super(props);\n        this.load = this.load.bind(this);\n        this.save = this.save.bind(this);\n        this.setInput = this.setInput.bind(this);\n        this.setLoading = this.setLoading.bind(this);\n    }\n\n    async load(){\n\n        //Load latest posts\n        try{\n            this.listenUIKit(()=>{\n                let bb:any = window;\n                try{\n                    bb.UIkit.modal(document.getElementById(this.props.modalId)).hide();\n                }catch(e){\n                    console.log({e});\n                }\n            });\n        }catch(e){\n            console.log({e});\n            console.log(\"Error setting modal...\");\n        }\n    }\n\n    setLoading(key:string, value:boolean){\n        this.setState(function(prev:any){\n            prev.loading[key] = value;\n            return prev;\n        });\n    }\n\n    listenUIKit(callback:()=>any){\n        let interval = setInterval(function(){\n            let bb:any = window;\n            if(bb.UIkit){\n                clearInterval(interval);\n                callback();\n            }\n        }, 50);\n    }\n\n    componentDidMount(){\n        this.load();\n    }\n\n    async save(){\n        this.setLoading(\"saving\", true)\n        try{\n            if(this.props.offerId){\n                console.log(\"Rating offer\");\n                await RateManager.rateOffer(this.state.formValue.comment, this.state.formValue.rate, this.props.offerId);\n                window.alert(\"Offer rated properly\");\n                UIKitManager.hideModal(this.props.modalId);\n            }else if(this.props.bidId){\n                console.log(\"Rating bid\");\n                await RateManager.rateBid(this.state.formValue.comment, this.state.formValue.rate, this.props.bidId);\n                window.alert(\"Bid rated properly\");\n                UIKitManager.hideModal(this.props.modalId);\n            }else{\n                console.log(\"Nothing to rate...\");\n                console.log(this.props);\n            }\n        }catch(e){\n            console.log({e});\n            window.alert(\"Error rating\");\n        }\n        \n        this.setLoading(\"saving\", false)\n    }\n\n    hide(){\n    }\n\n    setInput(event:SyntheticEvent){\n        let input:any = event.currentTarget;\n        let value = input.value, id = input.id;\n\n        this.setState(function(state:any){\n            state.formValue[id] = value;\n            return state;\n        });\n    }\n\n    get isLoading(){\n        for(const key of Object.keys(this.state.loading)){\n            if(this.state.loading[key]){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    render(){\n        return (\n            <div>\n                <div id={this.props.modalId}>\n                    <div className=\"uk-modal-dialog uk-modal-body\">\n                    <h2 className=\"uk-modal-title\">Review your experience</h2>\n                        <fieldset className=\"uk-fieldset\">\n                            <div className=\"uk-margin\">\n                                <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Your Rating</label>\n                                <div className=\"uk-form-controls\">\n                                    <select onChange={this.setInput} className=\"uk-select\" id=\"rate\">\n                                        <option value=\"0\">0/5</option>\n                                        <option value=\"20\">1/5</option>\n                                        <option value=\"40\">2/5</option>\n                                        <option value=\"60\">3/5</option>\n                                        <option value=\"80\">4/5</option>\n                                        <option value=\"100\">5/5</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"uk-margin\">\n                                <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Your Comment</label>\n                                <div className=\"uk-form-controls\">\n                                    <textarea onChange={this.setInput} id='comment' className=\"uk-textarea\"></textarea>\n                                </div>\n                            </div>\n                        </fieldset>\n                        <button disabled={this.isLoading} className=\"uk-button uk-button-default\" type=\"button\" onClick={this.save}>Save</button>\n                        <button disabled={this.isLoading} className=\"uk-button uk-button-default uk-modal-close\" type=\"button\">Close</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {IBidCreationPayload} from '../../lib/interface/Bid';\nimport BidManager from '../../lib/Bid';\nimport { BID_STATUS, OFFER_STATUS } from '../../constants/status';\nimport OfferManager from '../../lib/Offer';\nimport UIKitManager from '../../lib/UIKit';\nimport RateSnippet from '../RateSnippet';\ndeclare const UIkit:any;\n\nexport default class BidListing extends React.Component<{match:{params:{postId:string}}}> {\n\n    state:{\n        bids:IBidCreationPayload[],\n        loading: boolean,\n        displayBid:any,\n        displayBidContact: any,\n        post: any,\n        editingBidRate: string,\n        bidPaging: {\n            startAfter:IBidCreationPayload | null,\n            stopBefore:IBidCreationPayload | null,\n            limit: number,\n            page: number\n        }\n    } = {\n        bids:[],\n        loading: true,\n        displayBid:{},\n        displayBidContact:{},\n        post: null,\n        editingBidRate: \"\",\n        bidPaging: {\n            startAfter: null,\n            stopBefore: null,\n            limit: 5,\n            page: 0\n        }\n    };\n\n    constructor(props:any){\n        super(props);\n        this.load = this.load.bind(this);\n        this.setLoading = this.setLoading.bind(this);\n        this.rejectBid = this.rejectBid.bind(this);\n        this.loadBids = this.loadBids.bind(this);\n        this.loadPost = this.loadPost.bind(this);\n        this.prevBids = this.prevBids.bind(this);\n        this.nextBids = this.nextBids.bind(this);\n    }\n\n    setLoading(loading:boolean){\n        this.setState({loading});\n    }\n\n    async acceptBid(bidId:string){\n        this.setLoading(true);\n        try{\n            await BidManager.acceptBid(bidId);\n            await this.load();\n        }catch(e){\n            window.alert(\"Bid couldn't be accepted\");\n        }\n        this.setLoading(false);\n    }\n\n    get bid():IBidCreationPayload{\n        return this.state.displayBid;\n    }\n\n    get postId(){\n        return this.props.match ? this.props.match.params.postId : \"\";\n    }\n\n    async loadBids(){\n        let {startAfter, stopBefore, limit} = this.state.bidPaging;\n        this.setLoading(true);\n        console.log({\n            startAfter, stopBefore, limit\n        });\n        let bids = await BidManager.fetchGeneralBids(this.postId, startAfter?.createdAt, stopBefore?.createdAt, limit);\n        this.setState(function(state:any){\n            state['bids'] = bids;\n            state['bidPaging'].startAfter = bids[0];\n            state['bidPaging'].stopBefore = bids[bids.length-1];\n            return state;\n        });\n        this.setLoading(false);\n        this.setState({\n            bids\n        });\n    }\n\n    async loadPost(){\n        let post = await OfferManager.fetchOffer(this.postId, true);\n        this.setState({post});\n    }\n\n    async load(){\n\n        //Load latest bids\n        try{\n            this.setLoading(true);\n            await Promise.all([this.loadBids(), this.loadPost()]);\n            this.setLoading(false);\n        }catch(e){\n            console.log({e});\n            this.setLoading(false);\n            console.log(\"Error loading bids...\");\n        }\n    }\n\n    componentDidMount(){\n        this.load()\n        .catch(function(err){\n            console.log(\"Error loading bids\");\n        });\n        let object:any = document.getElementById('modal-details');\n        object.setAttribute('uk-modal','')\n    }\n\n    async viewBidDetails(bidId:string){\n        this.setLoading(true);\n        UIKitManager.showModal(\"modal-details\");\n        let bid:any = this.state.bids.find(element => element.id === bidId);\n        let contact = await BidManager.getBidContact(bid.poster);\n        this.setState({\n            displayBid: bid,\n            displayBidContact: contact\n        });\n        this.setLoading(false);\n    }\n\n    getStatus(element:IBidCreationPayload){\n        switch (element.status) {\n            case BID_STATUS.ACTIVE:\n                return \"ACTIVA\";\n            case BID_STATUS.ACCEPTED:\n                return \"ACEPTADA\";\n            case BID_STATUS.CANCELLED:\n                return \"CANCELADA\";\n            case BID_STATUS.REJECTED:\n                return \"RECHAZADA\";\n            default:\n                return element.status;\n        }\n    }\n\n    async rejectBid(bidId:string){\n        this.setLoading(true);\n        try {\n            await BidManager.rejectBid(bidId);\n            await this.load();\n        } catch(e) {\n            window.alert(\"Error rejecting bid\");\n        }\n        this.setLoading(false);\n    }\n\n    rateBid(bidId:string){\n        this.setState({\n            editingBidRate: bidId\n        });\n        UIKitManager.showModal(\"rateSnippet\");\n    }\n\n    prevBids(){\n        if(this.state.bidPaging.page > 0){\n            this.setLoading(true);\n            this.setState(function(oldState:any){\n                oldState['bidPaging'].stopBefore = oldState['bidPaging'].startAfter;\n                oldState['bidPaging'].startAfter = null;\n                oldState['bidPaging'].page-=1;\n                return oldState;\n            }, ()=>{\n                this.setLoading(false);\n                this.loadBids();\n            });\n        }\n    }\n\n    nextBids(){\n        if(this.state.bids.length >= this.state.bidPaging.limit){\n            this.setLoading(true);\n            this.setState(function(oldState:any){\n                oldState['bidPaging'].startAfter = oldState['bidPaging'].stopBefore;\n                oldState['bidPaging'].stopBefore = null;\n                oldState['bidPaging'].page+=1;\n                return oldState;\n            }, ()=>{\n                this.setLoading(false);\n                this.loadBids();\n            });\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <h3>Pujas</h3>\n                <table className=\"uk-table\">\n                    <thead>\n                        <tr>\n                            <th>ID de Puja</th>\n                            <th>Acciones de Puja</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.bids.map((element:IBidCreationPayload) => \n                                <tr\n                                className={`\n                                ${element.status === BID_STATUS.ACCEPTED ? 'accepted ' : ''}\n                                ${element.status === BID_STATUS.REJECTED ? 'rejected ' : ''}\n                                `}\n                                key={element.id}>\n                                    <td>{element.id}</td>\n                                    <td>\n                                        <button className=\"uk-button\" disabled={this.state.loading} onClick={(ev)=>this.viewBidDetails(element.id || \"\")}>Details</button>\n                                        {\n                                            this.state.post && this.state.post.status === OFFER_STATUS.ACTIVE ? \n                                                element.status === BID_STATUS.ACTIVE ? \n                                                    <>\n                                                        <button className=\"uk-button\" disabled={this.state.loading} onClick={() => this.acceptBid(element.id || \"\")}>Accept</button>\n                                                        <button className=\"uk-button\" disabled={this.state.loading} onClick={() => this.rejectBid(element.id || \"\")}>Reject</button>\n                                                    </>\n                                                : <>\n                                                    {\n                                                        element.status === BID_STATUS.ACCEPTED ? \n                                                        <>\n                                                            <button className=\"uk-button\" disabled={this.state.loading} onClick={()=>this.rateBid(element.id || \"\")}>Rate Bid</button>\n                                                        </>:<></>\n                                                    }\n                                                </>\n                                            : <></>\n                                        }\n                                    </td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td><button className=\"uk-button\" disabled={this.state.loading} onClick={this.prevBids}>Página Anterior</button></td>\n                            <td style={{textAlign:'right'}}><button  disabled={this.state.loading} className=\"uk-button\" onClick={this.nextBids}>Próxima Página</button></td>\n                        </tr>\n                    </tfoot>\n                </table>\n\n                <div id=\"modal-details\">\n                    <div className=\"uk-modal-dialog uk-modal-body\">\n                    <h2 className=\"uk-modal-title\">Bid ID: {this.bid.id}</h2>\n                        <h3>STATUS <b>{this.getStatus(this.state.displayBid)}</b></h3>\n                        <h3>Contact</h3>\n                        <b>Whatsapp</b> {this.state.displayBidContact.whatsapp}\n                        <hr/>\n                        <b>Phone</b> {this.state.displayBidContact.phone}\n                        <hr/>\n                        <b>Email</b> {this.state.displayBidContact.email}\n                        <hr/>\n                        <button className=\"uk-button uk-button-default uk-modal-close\" type=\"button\">Close</button>\n                    </div>\n                </div>\n                <RateSnippet modalId={\"rateSnippet\"} bidId={this.state.editingBidRate} />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {IBidRating} from '../../lib/interface/Bid';\nimport { IOfferRating } from '../../lib/interface/Offer';\nimport RateManager from '../../lib/Rate';\nimport Firebase from '../../lib/Firebase';\n\nexport default class RateListing extends React.Component<{match:{params:{postId?:string, bidId?:string, posterId?:string, ratedUser?:string, ratingType?:'offer'|'bid'}}}> {\n\n    state:{\n        ratings: IBidRating[] | IOfferRating[] | any[],\n        loading: boolean,\n        paging: {\n            startAfter:IBidRating | IOfferRating | any,\n            stopBefore:IBidRating | IOfferRating | any,\n            limit: number,\n            page: number\n        }\n    } = {\n        ratings: [],\n        loading: false,\n        paging: {\n            startAfter:null,\n            stopBefore:null,\n            limit: 5,\n            page: 0\n        }\n    };\n\n    constructor(props:any){\n        super(props);\n        this.load = this.load.bind(this);\n        this.setLoading = this.setLoading.bind(this);\n        this.loadRatings = this.loadRatings.bind(this);\n        this.nextPage = this.nextPage.bind(this);\n        this.prevPage = this.prevPage.bind(this);\n    }\n\n    setLoading(loading:boolean){\n        this.setState({loading});\n    }\n\n    get postId(){\n        return this.props.match.params.postId;\n    }\n\n    get bidId(){\n        return this.props.match.params.bidId;\n    }\n\n    get posterId(){\n        return this.props.match.params.posterId;\n    }\n\n    get ratedUser(){\n        return this.props.match.params.ratedUser;\n    }\n\n    get ratingType(){\n        return this.props.match.params.ratingType || 'offer';\n    }\n\n    async load(){\n        await Firebase.waitForAuth();\n        try{\n            this.loadRatings();\n        }catch(e){\n            console.log({e});\n            window.alert(\"Error loading ratings!\");\n        }\n    }\n\n    async loadRatings(){\n        this.setLoading(true);\n        try{\n            let ratings:IBidRating[] | IOfferRating[] = [];\n            if(this.bidId){\n                console.log(\"Loading bid ID\");\n            }else if(this.postId){\n                ratings = await RateManager\n                .fetchOfferRatings(this.postId || \"\",\n                    this.state.paging.startAfter?.createdAt,\n                    this.state.paging.stopBefore?.createdAt,\n                    this.state.paging.limit);\n            }else if(this.ratedUser){\n                ratings = await RateManager.fetchUserRatings(this.ratedUser, this.ratingType, this.state.paging.startAfter, this.state.paging.stopBefore, this.state.paging.limit);\n            }\n            this.setState(function(state:any){\n                state['ratings'] = ratings;\n                state['paging'].startAfter = ratings[0];\n                state['paging'].stopBefore = ratings[ratings.length-1];\n                return state;\n            });\n        }catch(e){\n            console.log({e});\n            window.alert(\"Error loading the ratings!\");\n        }\n        this.setLoading(false);\n    }\n\n    componentDidMount(){\n        this.load();\n    }\n\n    getRating(rating:IOfferRating | IBidRating){\n        return (parseInt(rating.rate+\"\")/20)+\"/5\";\n    }\n\n    prevPage(){\n        if(this.state.paging.page > 0){\n            this.setLoading(true);\n            this.setState(function(oldState:any){\n                oldState['paging'].stopBefore = oldState['paging'].startAfter;\n                oldState['paging'].startAfter = null;\n                oldState['paging'].page-=1;\n                return oldState;\n            }, ()=>{\n                this.setLoading(false);\n                this.loadRatings();\n            });\n        }\n    }\n\n    nextPage(){\n        if(this.state.ratings.length >= this.state.paging.limit){\n            this.setLoading(true);\n            this.setState(function(oldState:any){\n                oldState['paging'].startAfter = oldState['paging'].stopBefore;\n                oldState['paging'].stopBefore = null;\n                oldState['paging'].page+=1;\n                return oldState;\n            }, ()=>{\n                this.setLoading(false);\n                this.loadRatings();\n            });\n        }\n    }\n\n    getDate(element:IOfferRating | IBidRating){\n        return element.createdAt+\"\";\n    }\n\n    getData(){\n        let elements:any[] = this.state.ratings;\n        if(elements && elements.length){\n            return elements.map(element => (\n                <div className=\"uk-card uk-card-body\" key={element.id}\n                style={{\n                    border: \"1px solid grey\",\n                    borderRadius: \"10px\",\n                    margin: \"0.5em\"\n                }}>\n                    <b>{this.getRating(element)}</b> <small>{this.getDate(element)}</small>\n                    <br/> \n                    {element.comment}\n                </div>\n            ));\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <table className=\"uk-table\">\n                    <tbody>\n                        <tr>\n                            <td colSpan={2}>\n                                <h3>Ratings</h3>\n                                {\n                                    \n                                    this.getData()\n                                }\n                            </td>\n                        </tr>\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td>\n                                <button className=\"uk-button\" disabled={this.state.loading} onClick={this.prevPage}>Anterior Página</button>\n                            </td>\n                            <td style={{textAlign:'right'}}>\n                                <button className=\"uk-button\"  disabled={this.state.loading} onClick={this.nextPage}>Próxima Página</button>\n                            </td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        )\n    }\n}","import React, { SyntheticEvent } from 'react';\nimport OfferManager from '../../lib/Offer';\nimport UtilsManager from '../../lib/Utils';\nimport { IOffer } from '../../lib/interface/Offer';\nimport Firebase from '../../lib/Firebase';\nimport {Link} from 'react-router-dom';\nimport { IBidCreationPayload } from '../../lib/interface/Bid';\nimport BidManager from '../../lib/Bid';\nimport { BID_STATUS, OFFER_STATUS } from '../../constants/status';\nimport BidListing from '../BidListing';\nimport { IImage } from '../../lib/interface/Media';\nimport RateSnippet from '../RateSnippet';\nimport RateManager from '../../lib/Rate';\nimport RateListing from '../RateListing';\n\ndeclare const UIkit:any;\nexport class ViewOwnOfferComponent extends React.Component<{match:{params:{postId:string}}}> {\n\n    state:any = {\n        formValue:{},\n        b64Image: \"\",\n        hasBids: false\n    };\n\n    constructor(props:any){\n        super(props);\n        this.setValue = this.setValue.bind(this);\n        this.submit = this.submit.bind(this);\n        this.uploadNewImage = this.uploadNewImage.bind(this);\n        this.load = this.load.bind(this);\n        this.closeOffer = this.closeOffer.bind(this);\n    }\n\n\n    setValue(event:any){\n        const id = (event.currentTarget).getAttribute('custom-id');\n        const value = event.currentTarget['value'];\n        this.setState(function(state:any){\n            state.formValue[id] = value;\n            return state;\n        });\n    }\n\n    submit(event:SyntheticEvent){\n        event.preventDefault();\n        OfferManager.updateOffer(this.state.formValue, this.postId)\n        .then(function(data){\n            window.alert(\"Se ha guardado su oferta satisfactoriamente\");\n        })\n        .catch(function(err){\n            window.alert(\"Error actualizando la oferta\");\n        })\n    }\n\n    get exchangeRate(){\n        let offeringAmmount = this.state.formValue['offer_ammount'] || 1;\n        let acceptingAmmount = this.state.formValue['accept_ammount'] || 1;\n        return offeringAmmount / acceptingAmmount;\n    }\n\n    get postId(){\n        return this.props.match.params.postId;\n    }\n\n    async loadPost(){\n        if(this.state.loadingPost){\n            return;\n        }\n        this.setState({\n            loadingPost: true\n        });\n        try{\n            let data = await OfferManager.fetchOffer(this.postId)\n            if(!data){\n                throw new Error(\"Offer not found\");\n            }\n            let hasBids = await BidManager.hasGeneralBids(this.postId);\n            this.setState(function(oldState:any){\n                oldState['formValue'] = data;\n                oldState['hasBids'] = hasBids;\n                return oldState;\n            });\n        }catch(e){\n            window.alert(\"Error fetching offer\");\n        }\n        this.setState({\n            loadingPost: false\n        });\n    }\n\n    newImageInput(){\n        document.getElementById('newImageInput')?.click();\n    }\n\n    async load(){\n        if(this.postId){\n            await this.loadPost();\n        }\n        \n        let element:any = document.getElementById(\"newImageInput\");\n        element.onchange = (event:any)=>{\n            let input = event.target;\n            if (input.files && input.files[0]) {\n                var reader = new FileReader();\n                \n                reader.onload = (e:any) => {\n                    //$('#blah').attr('src', e.target.result);\n                    console.log(\"Did read the image as b64\");\n                    this.setState({\n                        b64Image: e.target.result,\n                        newImageFile: input.files[0]\n                    });\n                }\n                reader.readAsDataURL(input.files[0]); // convert to base64 string\n            }\n        }\n    }\n\n    componentDidMount(){\n        this.load()\n        .then(function(){\n\n        })\n        .catch(function(e){\n            console.log({e});\n            window.alert(\"Error loading offer\");\n        });\n    }\n\n    async uploadNewImage(){\n\n        if(this.state.uploading){\n            return;\n        }\n        this.setState({\n            uploading: true\n        });\n        try{\n            await OfferManager.uploadImage(this.postId, this.state.newImageFile)\n            this.setState({\n                b64Image: null,\n                newImageFile: null\n            });\n            this.loadPost();\n        }catch(e){\n            console.log({e});\n            window.alert(\"Error uploading image\");\n        }\n\n        this.setState({\n            uploading: false\n        });\n    }\n\n    async closeOffer(){\n        if(this.state.closing){\n            return;\n        }\n        this.setState({\n            closing: true\n        });\n        try{\n            await OfferManager.closeOffer(this.postId);\n            await this.loadPost();\n            window.alert(\"Offer has been closed successfully\");\n        }catch(e){\n            console.log({e});\n            window.alert(\"Error cancelling offer\");\n        }\n        this.setState({\n            closing: false\n        });\n        \n    }\n\n    get canChooseImage(){\n        return this.canSave && !this.loading;\n    }\n\n    get loading(){\n        return this.state.uploading || this.state.closing || this.state.saving || this.state.loadingPost;\n    }\n\n    get canSave(){\n        return (this.state.formValue.status === OFFER_STATUS.ACTIVE) && this.isOwn && !this.loading && !this.state.hasBids;\n    }\n\n\n    get isOwn(){\n        return Firebase.auth.currentUser && this.state.formValue.poster && Firebase.auth.currentUser.uid === this.state.formValue.poster;\n    }\n\n    async removeImage(image:IImage){\n        try{\n            if(window.confirm(\"Do you want to remove this image?\")){\n                await OfferManager.removeImage(this.postId, image);\n                await this.loadPost();\n                window.alert(\"Image successfully removed\");\n            }\n        }catch(e){\n            window.alert(\"Error removing the image\");\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <form style={{padding:'2em'}} onSubmit={this.submit}>\n                    <h3>Oferta</h3>\n                    <fieldset className=\"uk-fieldset\">\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Título</label>\n                            <div className=\"uk-form-controls\">\n                                <input disabled={!this.canSave} value={this.state.formValue['title']} onChange={this.setValue} custom-id='title' className=\"uk-input\" type=\"text\" placeholder=\"Title\"/>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Descripción de La Oferta</label>\n                            <div className=\"uk-form-controls\">\n                                <textarea disabled={!this.canSave} value={this.state.formValue['description']} onChange={this.setValue} custom-id='description' className=\"uk-textarea\"></textarea>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Moneda de Oferta</label>\n                            <div className=\"uk-form-controls\">\n                                <select disabled={!this.canSave} value={this.state.formValue['offer_currency']} className=\"uk-select\" id=\"form-stacked-select\" onChange={this.setValue} custom-id='offer_currency'>\n                                    <option>Selecciona tu moneda</option>\n                                    <option value=\"USD\">USD</option>\n                                    <option value=\"BSF\">BSF</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Cantidad en Oferta</label>\n                            <div className=\"uk-form-controls\">\n                                <input disabled={!this.canSave} value={this.state.formValue['offer_ammount']} onChange={this.setValue} custom-id=\"offer_ammount\" type=\"number\" className=\"uk-input\"></input>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Tipo de Pago</label>\n                            <div className=\"uk-form-controls\">\n                                <select disabled={!this.canSave} value={this.state.formValue['offer_payment_method']} onChange={this.setValue} custom-id=\"offer_payment_method\" className=\"uk-select\" id=\"form-stacked-select\">\n                                    <option>Selecciona tu Método de Pago</option>\n                                    <option value=\"transferencia\">Transferencia</option>\n                                    <option value=\"efectivo\">Efectivo</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Acepta Moneda</label>\n                            <div className=\"uk-form-controls\">\n                                <select disabled={!this.canSave} value={this.state.formValue['accept_currency']} onChange={this.setValue} custom-id=\"accept_currency\" className=\"uk-select\" id=\"form-stacked-select\">\n                                    <option>Seleccione la moneda a aceptar</option>\n                                    <option value=\"USD\">USD</option>\n                                    <option value=\"BSF\">BSF</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Cantidad a Aceptar</label>\n                            <div className=\"uk-form-controls\">\n                                <input disabled={!this.canSave} value={this.state.formValue['accept_ammount']} onChange={this.setValue} custom-id=\"accept_ammount\" type=\"number\" className=\"uk-input\"></input>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Acepta Método de Pago</label>\n                            <div className=\"uk-form-controls\">\n                                <select disabled={!this.canSave} value={this.state.formValue['accept_payment_method']} onChange={this.setValue} custom-id=\"accept_payment_method\" className=\"uk-select\" id=\"form-stacked-select\">\n                                    <option>Seleccione su Método de Pago</option>\n                                    <option value=\"transferencia\">Transferencia</option>\n                                    <option value=\"efectivo\">Efectivo</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"uk-position-relative uk-visible-toggle uk-light\" custom-tabindex=\"-1\" uk-slider={\"\"}>\n                            <ul className=\"uk-slider-items uk-child-width-1-2 uk-child-width-1-3@s uk-child-width-1-4@m\">\n\n                                <input type=\"file\" hidden={true} id=\"newImageInput\"></input>\n                                {\n                                    this.canChooseImage ?\n                                        !this.state.b64Image ? \n                                            <li style={{maxWidth:'400px', maxHeight:'300px', display:'inline-block',textAlign:'center'}}>\n                                                <button className=\"uk-button\" disabled={!this.canChooseImage} style={{backgroundColor:'#1e87f0', color:'white'}} onClick={this.newImageInput}>Selecciona nueva Imágen</button>\n                                            </li> :\n                                        <>\n                                            <li style={{maxWidth:'400px', maxHeight:'300px', display:'inline-block'}}>\n                                                <img data-src={this.state.b64Image} alt=\"Bill Image\" uk-img={\"\"}></img>\n                                                <button className=\"uk-button\" disabled={!this.canChooseImage} style={{backgroundColor:'#1e87f0', color:'white'}} onClick={this.uploadNewImage}>Sube Nueva Imágen</button>\n                                            </li>\n                                        </> :\n                                    <></>\n                                }\n                                {\n                                    this.state.uploading ?\n                                    <li>\n                                        <h3 style={{color:'black'}}>Subiendo imágen...</h3>\n                                    </li> : <></>\n                                }\n                                {\n                                    this.state.formValue && this.state.formValue.images ? \n                                    this.state.formValue.images.map((element:IImage) => \n                                        <li key={element.id}>\n                                            <img src={element.downloadURL} style={{width:'300px',maxHeight:'500px'}}/>\n                                            {\n                                                this.canChooseImage ? \n                                                <button className=\"uk-button\" disabled={!this.canChooseImage} style={{backgroundColor:'#1e87f0', color:'white'}} onClick={()=>this.removeImage(element)}>Eliminar Imágen</button>\n                                                : <></>\n                                            }\n                                            \n                                        </li>\n                                    ) : <></>\n                                }\n                            </ul>\n\n                            <a className=\"uk-position-center-left uk-position-small uk-hidden-hover\" uk-slidenav-previous={\"\"} uk-slider-item={\"previous\"}></a>\n                            <a className=\"uk-position-center-right uk-position-small uk-hidden-hover\" uk-slidenav-next={\"\"} uk-slider-item={\"next\"}></a>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <legend className=\"uk-legend\" style={{fontSize:'1.2em'}}>Tasa de Cambio: <b>{this.exchangeRate}</b></legend>\n                        </div>\n                        \n                        {\n                            this.canSave ? \n                            <button className=\"uk-button uk-button-primary\" role=\"submit\">Guardar Oferta</button>\n                            : this.state.hasBids ? \n                                <h3>Esta oferta tiene pujas. No puede ser actualizada.</h3>\n                            : <></>\n                        }\n                        {\n                            this.state.formValue.status == OFFER_STATUS.ACTIVE ? \n                            <>\n                                <button className=\"uk-button uk-button-primary\" onClick={this.closeOffer}>Cerrar Oferta</button>\n                            </> : <>\n                            <h3>This offer has been <b>{OfferManager.getOfferStatus(this.state.formValue.status)}</b></h3>\n                            </>\n                        }\n                        \n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport class ViewOfferComponent extends React.Component<{match:{params:{postId:string}}}> {\n\n    state:{\n        postData: IOffer,\n        bid: IBidCreationPayload | null,\n        loading:{\n            bid: boolean,\n            post: boolean,\n            bidAction: boolean\n        },\n        hasBids: boolean,\n        ratedOffer: boolean\n    } = {\n        postData: {\n            accept_ammount: 1,\n            accept_currency: \"BSF\",\n            description: \"1\",\n            offer_ammount: 1,\n            offer_currency: \"USD\",\n            offer_payment_method: \"Cash\",\n            title: \"1\",\n            accept_payment_method: \"Cash\",\n            poster: null,\n            status : null,\n            createdAt: null\n        },\n        hasBids: false,\n        bid: null,\n        loading:{\n            bid: false,\n            post: false,\n            bidAction: false\n        },\n        ratedOffer: false\n    };\n\n    constructor(props:any){\n        super(props);\n        this.loadPost = this.loadPost.bind(this);\n        this.state.postData = {\n            accept_ammount: 1,\n            accept_currency: \"BSF\",\n            description: \"1\",\n            offer_ammount: 1,\n            offer_currency: \"USD\",\n            offer_payment_method: \"Cash\",\n            title: \"1\",\n            accept_payment_method: \"Cash\",\n            poster: null,\n            status : null,\n            createdAt: null\n        };\n        this.placeBid = this.placeBid.bind(this);\n        this.cancelBid = this.cancelBid.bind(this);\n        this.setLoading = this.setLoading.bind(this);\n    }\n\n\n    get exchangeRate(){\n        let state:any = this.state;\n        let offeringAmmount = state.postData['offer_ammount'] || 1;\n        let acceptingAmmount = state.postData['accept_ammount'] || 1;\n        return offeringAmmount / acceptingAmmount;\n    }\n\n    get postId(){\n        return this.props.match.params.postId;\n    }\n\n    async loadPost(){\n        this.setLoading(\"post\", true);\n        try{\n            let result = await Promise.all([\n                await OfferManager.fetchOffer(this.postId),\n                await RateManager.hasRateOnOffer(this.postId)\n            ]);\n            let data = result[0];\n            let ratedOffer = result[1];\n            if(!data){\n                throw new Error(\"Offer not found\");\n            }\n            this.setState(function(oldState:any){\n                oldState['postData'] = data;\n                oldState['ratedOffer'] = ratedOffer;\n                return oldState;\n            });\n        }catch(e){\n            console.log({e});\n            window.alert(\"Error loading offer\");\n        }\n        this.setLoading(\"post\", false);\n    }\n\n    async loadBid(){\n        this.setLoading(\"bid\", true);\n        try{\n            let bids = await BidManager.getBids(this.postId);\n            if(bids.size > 0){\n                this.setState({\n                    bid: bids.docs[0].data()\n                });\n            }\n            if(this.isOwn){\n                let hasBids = await BidManager.hasGeneralBids(this.postId);\n                this.setState({\n                    hasBids\n                });\n            }\n        }catch(err){\n            console.log({err});\n        }\n        this.setLoading(\"bid\", false);\n    }\n\n    componentDidMount(){\n        if(this.postId){\n            this.loadPost()\n            .then(()=>{\n                this.loadBid();\n            });\n        }\n    }\n\n    setLoading(key:string, value:boolean){\n        this.setState(function(prev:any){\n            prev.loading[key] = value;\n            return prev;\n        });\n    }\n\n    async placeBid(){\n        this.setLoading(\"bidAction\", true);\n        let bidData:IBidCreationPayload = {\n            poster: null,\n            status: null,\n            offer: this.postId,    //Offer ID\n            createdAt: null\n        };\n        try{\n            await BidManager.createBid(bidData)\n            await this.loadBid();\n        }catch(e){\n            console.log(e);\n            window.alert(\"Error found creating bid.\");\n        }   \n        this.setLoading(\"bidAction\", false);\n    }\n\n    async cancelBid(){\n        this.setLoading(\"bidAction\", true);\n        try{\n            await BidManager.cancelBid(this.postId)\n            await this.loadBid();\n        }catch(e){\n            console.log({e});\n            window.alert(\"Cancelling bid\");\n        }\n        this.setLoading(\"bidAction\", false);\n    }\n\n    get isOwn(){\n        return Firebase.auth.currentUser && this.state.postData.poster && Firebase.auth.currentUser.uid === this.state.postData.poster;\n    }\n\n    get canEdit(){\n        return this.isOwn && this.state.postData.status === OFFER_STATUS.ACTIVE && !this.isLoading;\n    }\n\n    get isLoading(){\n        return this.state.loading.bid || this.state.loading.bidAction || this.state.loading.post;\n    }\n\n    rateOffer(){\n        UIkit.modal(document.getElementById('rateSnippet')).show();\n    }\n\n    render(){\n        return (\n            <div>\n                <h3>Oferta. &nbsp;\n                    {\n                        this.state.postData.status !== null ? \n                        <b>\n                            {OfferManager.getOfferStatus(this.state.postData.status || OFFER_STATUS.ACTIVE)}\n                        </b>\n                        : <></>\n                    }\n                </h3>\n                <fieldset className=\"uk-fieldset\">\n\n                    <div className=\"uk-margin\">\n                        <h4>{this.state.postData.title}</h4>\n                    </div>\n\n                    <div className=\"uk-margin\">\n                        {this.state.postData.description}\n                    </div>\n\n                    <div className=\"uk-margin\">\n                        <legend className=\"uk-legend\" custom-for=\"form-stacked-select\">Oferta: {UtilsManager.getCurrency(this.state.postData.offer_ammount)} {this.state.postData.offer_currency}</legend>\n                    </div>\n\n                    <div className=\"uk-margin\">\n                        <legend className=\"uk-legend\" custom-for=\"form-stacked-select\">Paga via: {this.state.postData.offer_payment_method}</legend>\n                    </div>\n\n                    <div className=\"uk-margin\">\n                        <legend className=\"uk-legend\" custom-for=\"form-stacked-select\">Acepta: {UtilsManager.getCurrency(this.state.postData.accept_ammount)} {this.state.postData.accept_currency}</legend>\n                    </div>\n\n                    <div className=\"uk-margin\">\n                        <legend className=\"uk-legend\" custom-for=\"form-stacked-select\">Acepta Pago Via: {this.state.postData.accept_payment_method}</legend>\n                    </div>\n\n                    <div className=\"uk-margin\">\n                        <legend className=\"uk-legend\" style={{fontSize:'1.2em'}}>Tasa de Cambio: <b>{this.exchangeRate}</b></legend>\n                    </div>\n\n                    {\n                        !this.isLoading && !this.isOwn && !this.state.bid ? \n                        <button className=\"uk-button uk-button-primary\" onClick={this.placeBid}>Colocar Puja</button>\n                        : <></>\n                    }\n\n                    <div className=\"uk-position-relative uk-visible-toggle uk-light\" uk-slider={\"\"}>\n                        <ul className=\"uk-slider-items uk-child-width-1-2 uk-child-width-1-3@s uk-child-width-1-4@m\">\n                            <li style={{width:'0px'}}></li>\n                            {\n                                this.state.postData && this.state.postData.images ? \n                                this.state.postData.images.map((element:IImage) => \n                                    <li key={element.id}>\n                                        <img src={element.downloadURL} style={{width:'300px',maxHeight:'500px'}}/>\n                                    </li>\n                                ) : <></>\n                            }\n                        </ul>\n\n                        <a className=\"uk-position-center-left uk-position-small uk-hidden-hover\" uk-slidenav-previous={\"\"} uk-slider-item={\"previous\"}></a>\n                        <a className=\"uk-position-center-right uk-position-small uk-hidden-hover\" uk-slidenav-next={\"\"} uk-slider-item={\"next\"}></a>\n                    </div>\n                    <hr/>\n                    {\n                        !this.isOwn && this.state.bid ? \n                        <>\n                            {\n                                this.state.bid.status === BID_STATUS.ACTIVE ? \n                                <button className=\"uk-button uk-button-primary\" onClick={this.cancelBid}>Cancelar Puja</button>\n                                : this.state.ratedOffer ? <>\n                                </>\n                                :<>\n                                    <button id=\"newRating\" className=\"uk-button uk-button-primary\" onClick={this.rateOffer}>Calificar Oferta</button>\n                                </>\n                            }\n                        </>\n                        : <></>\n                    }\n                    \n                    {\n                        this.canEdit ? \n                        <Link to={`/edit/post/${this.postId}`}>\n                            <button className=\"uk-button uk-button-primary\">Editar Oferta</button>\n                        </Link>\n                        : \n                        <></>\n                    }\n\n                    <hr/>\n                    {\n                        this.isOwn ? \n                        <BidListing match={this.props.match}></BidListing>\n                        : <></>\n                    }\n                    <RateSnippet modalId={\"rateSnippet\"} offerId={this.postId} />\n                    <RateListing match={this.props.match}/>\n                </fieldset>\n            </div>\n        );\n    }\n}","import { IContactUpdatePayload } from \"./interface/Contact\";\nimport Firebase from \"./Firebase\";\nimport CheckManager from \"./Checker\";\n\nexport class ContactManager {\n\n    private static _instance:ContactManager;\n\n    private constructor(){\n    }\n\n    public static get Instance(){\n        this._instance = this._instance ? this._instance : new ContactManager();\n        return this._instance;\n    }\n\n    async updateContactInformation(contactUpdatePayload:IContactUpdatePayload){\n        //\n        if(!CheckManager.hasValidContactUData(contactUpdatePayload)){\n            throw new Error(\"Invalid data\");\n        }\n        if(!Firebase.auth.currentUser){\n            throw new Error(\"User must be logged in\");\n        }\n        await Firebase.firestore.collection('contact').doc(Firebase.auth.currentUser?.uid).set(contactUpdatePayload);\n    }\n\n    async getContactInformation():Promise<IContactUpdatePayload>{\n        let doc = await Firebase.firestore.collection('contact').doc(Firebase.auth.currentUser?.uid).get();\n        if(doc.exists){\n            return doc.data() || {};\n        }\n        return {};\n    }\n}\n\nexport default ContactManager.Instance;","import React, { SyntheticEvent } from 'react';\nimport ContactManager from '../../lib/Contact';\nimport Firebase from '../../lib/Firebase';\n\nexport default class ProfileComponent extends React.Component {\n\n\tstate: any = {\n\t\tformValue: {}\n\t};\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.setValue = this.setValue.bind(this);\n\t\tthis.submit = this.submit.bind(this);\n\t\tthis.setLoading = this.setLoading.bind(this);\n\t}\n\n\tsetLoading(isLoading:boolean){\n\t\tthis.setState({\n\t\t\tisLoading\n\t\t});\n\t}\n\n\n\tsetValue(event: any) {\n\t\tconst id = (event.currentTarget).getAttribute('custom-id');\n\t\tconst value = event.currentTarget['value'];\n\t\tthis.setState(function (state: any) {\n\t\t\tstate.formValue[id] = value;\n\t\t\treturn state;\n\t\t});\n\t}\n\n\tsubmit(event: SyntheticEvent) {\n\t\tevent.preventDefault();\n\t\tconsole.log({ form: this.state.formValue });\n\t\tthis.setLoading(true);\n\t\tContactManager.updateContactInformation(this.state.formValue)\n\t\t\t.then((data) => {\n\t\t\t\twindow.alert(\"Contacto almacenado\");\n\t\t\t\tthis.setLoading(!true);\n\t\t\t})\n\t\t\t.catch( (err) => {\n\t\t\t\twindow.alert(\"Error actualizando tu contacto\");\n\t\t\t\tthis.setLoading(!true);\n\t\t\t});\n\t}\n\n\tget exchangeRate() {\n\t\tlet offeringAmmount = this.state.formValue['offer_ammount'] || 1;\n\t\tlet acceptingAmmount = this.state.formValue['accept_ammount'] || 1;\n\t\treturn offeringAmmount / acceptingAmmount;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setLoading(true);\n\t\tFirebase.listenAuthChanges((user) => {\n\t\t\tif (user) {\n\t\t\t\tContactManager\n\t\t\t\t.getContactInformation()\n\t\t\t\t.then((data) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tformValue: data\n\t\t\t\t\t});\n\t\t\t\t\tthis.setLoading(!true);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\twindow.alert(\"Error cargando la información de contacto\");\n\t\t\t\t\tthis.setLoading(!true);\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form style={{ padding: '2em' }} onSubmit={this.submit}>\n\t\t\t\t\t<h3>Información de Contacto</h3>\n\t\t\t\t\t<fieldset className=\"uk-fieldset\">\n\t\t\t\t\t\t<div className=\"uk-margin\">\n\t\t\t\t\t\t\t<label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Teléfono de Contacto</label>\n\t\t\t\t\t\t\t<div className=\"uk-form-controls\">\n\t\t\t\t\t\t\t\t<input onChange={this.setValue} custom-id=\"phone\" value={this.state.formValue['phone']} type=\"phone\" className=\"uk-input\"></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"uk-margin\">\n\t\t\t\t\t\t\t<label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Número de Contacto</label>\n\t\t\t\t\t\t\t<div className=\"uk-form-controls\">\n\t\t\t\t\t\t\t\t<input onChange={this.setValue} custom-id=\"whatsapp\" value={this.state.formValue['whatsapp']} type=\"phone\" className=\"uk-input\"></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"uk-margin\">\n\t\t\t\t\t\t\t<label className=\"uk-form-label\" custom-for=\"form-stacked-select\">Email</label>\n\t\t\t\t\t\t\t<div className=\"uk-form-controls\">\n\t\t\t\t\t\t\t\t<input onChange={this.setValue} custom-id=\"email\" value={this.state.formValue['email']} type=\"email\" className=\"uk-input\"></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button className=\"uk-button uk-button-primary\" disabled={this.state.isLoading} role=\"submit\">Guardar Información de Contacto</button>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react';\nimport Firebase from '../../lib/Firebase';\nimport RateManager from '../../lib/Rate';\nimport RateListing from '../RateListing';\n\nexport default class PublicProfileComponent extends React.Component {\n\n\tstate: {\n\t\tformValue: {},\n        bidPaging: {\n            startAfter: Date | null,\n            stopBefore: Date | null,\n            limit: number,\n            page: number\n\t\t},\n\t\tratePaging: {\n            startAfter: Date | null,\n            stopBefore: Date | null,\n            limit: number,\n            page: number\n\t\t}\n\t} = {\n\t\tformValue: {},\n        bidPaging: {\n            startAfter: null,\n            stopBefore: null,\n            limit: 5,\n            page: 0\n        },\n        ratePaging: {\n            startAfter: null,\n            stopBefore: null,\n            limit: 5,\n            page: 0\n        }\n\t};\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.setLoading = this.setLoading.bind(this);\n\t}\n\n\tsetLoading(isLoading:boolean){\n\t\tthis.setState({\n\t\t\tisLoading\n\t\t});\n\t}\n\n\tget profileId(){\n\t\tlet anyProps:any = this.props;\n\t\tlet profileId = anyProps['match']['params']['profileId'];\n\t\treturn profileId;\n\t}\n\n\n\tcomponentDidMount() {\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>User</h3>\n\t\t\t\t<h4>Bid Ratings</h4>\n\t\t\t\t<RateListing match={{params:{ratedUser:this.profileId, ratingType:'bid'}}}/>\n\t\t\t\t<h4>Offer Ratings</h4>\n\t\t\t\t<RateListing match={{params:{ratedUser:this.profileId, ratingType:'offer'}}}/>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react';\nimport Navigation from '../Navigation';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { ROUTES } from '../../constants/routes';\nimport HomeComponent from '../Home';\nimport LandingComponent from '../Landing';\nimport NewPostComponent from '../NewPost'\nimport { SignUpComponent } from '../SignUp';\nimport {SignInComponent} from '../SignIn'\nimport {Helmet} from 'react-helmet'\nimport Firebase from '../../lib/Firebase';\nimport {ViewOfferComponent, ViewOwnOfferComponent} from '../Post'\nimport ProfileComponent from '../Profile';\nimport PublicProfileComponent from '../PublicProfile';\n\n\nexport class BaseComponent extends React.Component {\n\n    state:{\n        currentUser:any\n    } = {\n        currentUser:null\n    }\n\n    componentDidMount(){\n        Firebase.auth.onAuthStateChanged((data)=>{\n            this.setState(function(oldie:any){\n                oldie['currentUser'] = data;\n                return oldie;\n            });\n        });\n    }\n\n\n    render(){\n        return (\n            <Router>\n                <Helmet>\n                    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/uikit@3.5.4/dist/css/uikit.min.css\" />\n                    <script src=\"https://cdn.jsdelivr.net/npm/uikit@3.5.4/dist/js/uikit.min.js\"></script>\n                    <script src=\"https://cdn.jsdelivr.net/npm/uikit@3.5.4/dist/js/uikit-icons.min.js\"></script>\n                </Helmet>\n                <Navigation/>\n                <hr/>\n                <div id=\"content\">\n                    <Route exact path={ROUTES.SIGN_UP} component={SignUpComponent}/>\n                    <Route exact path={ROUTES.HOME} component={HomeComponent}/>\n                    <Route exact path={ROUTES.SIGN_IN} component={SignInComponent}/>\n                    <Route exact path={ROUTES.NEW_POST} component={NewPostComponent}/>\n                    <Route path={ROUTES.VIEW_POST} component={ViewOfferComponent}/>\n                    <Route path={ROUTES.EDIT_POST} component={ViewOwnOfferComponent}/>\n                    <Route exact path={ROUTES.PROFILE} component={ProfileComponent}/>\n                    <Route path={ROUTES.PUBLIC_PROFILE} component={PublicProfileComponent}/>\n                </div>\n            </Router>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BaseComponent } from './components/Base';\n\nReactDOM.render(\n  <BaseComponent/>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}